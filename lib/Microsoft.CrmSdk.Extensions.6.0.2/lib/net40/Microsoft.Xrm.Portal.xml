<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Microsoft.Xrm.Portal</name>
    </assembly>
    <members>
        <member name="P:Microsoft.Xrm.Portal.Web.UI.WebControls.SavedQueryDataSourceView.Owner">
            <summary>
            Gets the owner data source.
            </summary>
        </member>
        <member name="T:Microsoft.Xrm.Portal.Web.Routing.PortalRouteHandler">
            <summary>
            Handles requests to portal <see cref="T:Microsoft.Xrm.Sdk.Entity"/> objects.
            </summary>
            <seealso cref="T:Microsoft.Xrm.Portal.Web.Modules.PortalRoutingModule"/>
            <seealso cref="T:Microsoft.Xrm.Portal.Web.Handlers.AnnotationHandler"/>
        </member>
        <member name="M:Microsoft.Xrm.Portal.Web.Routing.PortalRouteHandler.GetHttpHandler(System.Web.Routing.RequestContext)">
            <summary>
            Provides the object that processes the request.
            </summary>
            <param name="requestContext">An object that encapsulates information about the request.</param>
            <returns></returns>
        </member>
        <member name="P:Microsoft.Xrm.Portal.Web.Routing.PortalRouteHandler.PortalName">
            <summary>
            The name of the <see cref="T:Microsoft.Xrm.Portal.Configuration.PortalContextElement"/> specifying the current portal.
            </summary>
        </member>
        <member name="T:Microsoft.Xrm.Portal.Web.Data.Services.CmsDataService`1">
            <summary>
            Base class for ADO.NET Data Services to support CMS front-side editing features.
            </summary>
            <typeparam name="TDataContext">
            The <see cref="T:Microsoft.Xrm.Client.CrmOrganizationServiceContext"/> whose entities are exposed by this service.
            </typeparam>
        </member>
        <member name="M:Microsoft.Xrm.Portal.Web.Data.Services.CmsDataService`1.AttachFilesToEntity(System.String,System.Guid)">
            <summary>
            Service operation to add a file attachment annotation to an entity, by Guid and entity set name.
            </summary>
        </member>
        <member name="M:Microsoft.Xrm.Portal.Web.Data.Services.CmsDataService`1.DeleteEntity(System.String,System.Guid)">
            <summary>
            Service operation to delete an entity.
            </summary>
        </member>
        <member name="M:Microsoft.Xrm.Portal.Web.Data.Services.CmsDataService`1.GetEntityUrl(System.String,System.Guid)">
            <summary>
            Service operation to get a URL for an entity, by Guid and entity set name.
            </summary>
            <returns>Entity URL as a string.</returns>
        </member>
        <member name="M:Microsoft.Xrm.Portal.Web.Data.Services.CmsDataService`1.InterceptChange``1(``0,System.Data.Services.UpdateOperations)">
            <summary>
            Intercepts changes on the entity types we care about (through codegen <see cref="T:System.Data.Services.ChangeInterceptorAttribute">Change Interceptors</see>).
            </summary>
            <exception cref="T:System.Data.Services.DataServiceException">
            Throws 403 <see cref="T:System.Data.Services.DataServiceException"/> on any security permission failure, of when passed a <see cref="T:Microsoft.Xrm.Sdk.Entity"/> of
            an entity type that is not explicitly handled by this implementation.
            </exception>
        </member>
        <member name="T:Microsoft.Xrm.Portal.Web.Compilation.SiteSettingExpressionBuilder">
            <summary>
            Expression builder for retrieving site setting content for the current portal.
            </summary>
            <remarks>
            <example>
            Configuration.
            <code>
            <![CDATA[
            <configuration>
            
             <system.web>
              <compilation>
               <expressionBuilders>
                <add expressionPrefix="SiteSetting" type="Microsoft.Xrm.Portal.Web.Compilation.SiteSettingExpressionBuilder, Microsoft.Xrm.Portal"/>
               </expressionBuilders>
              </compilation>
             
            </configuration>
            ]]>
            </code>
            Usage in ASPX page.
            <code>
            <![CDATA[
            <asp:Label runat="server" Text='<%$ SiteSetting: Name={setting name} [, Default={default text}] [, Format={format string}] [, Portal={portal name}] %>'/>
            <asp:Label runat="server" Text='<%$ SiteSetting: Name=Browser Title Prefix, Format=-{0}- %>'/>
            ]]>
            </code>
            </example>
            </remarks>
        </member>
        <member name="T:Microsoft.Xrm.Portal.Web.Compilation.PortalContextExpressionBuilder">
            <summary>
            Expression builder for retrieving <see cref="T:Microsoft.Xrm.Portal.IPortalContext"/> content (website, webpage, and user) for the current portal.
            </summary>
            <remarks>
            <example>
            Configuration.
            <code>
            <![CDATA[
            <configuration>
            
             <system.web>
              <compilation>
               <expressionBuilders>
                <add expressionPrefix="Context" type="Microsoft.Xrm.Portal.Web.Compilation.PortalContextExpressionBuilder, Microsoft.Xrm.Portal"/>
               </expressionBuilders>
              </compilation>
             
            </configuration>
            ]]>
            </code>
            Usage in ASPX page.
            <code>
            <![CDATA[
            <asp:Label runat="server" Text='<%$ Context: (Current|Property={Website|User|Entity}) [, Attribute={attribute name}] [, Eval={expression}] [, Format={format string}] [, Default={default text}] [, Portal={portal name}] %>'/>
            <asp:Label runat="server" Text='<%$ Context: Property=User, Attribute=firstname, Format=-{0}-, Default=-unknown- %>'/>
            <asp:Label runat="server" Text='<%$ Context: Property=User, Eval=Firstname, Format=-{0}-, Default=-unknown- %>'/>
            ]]>
            </code>
            </example>
            </remarks>
        </member>
        <member name="T:Microsoft.Xrm.Portal.PortalContext">
            <summary>
            Contains the <see cref="P:Microsoft.Xrm.Portal.PortalContext.Entity"/> instances that are relevant to a single portal page request.
            </summary>
        </member>
        <member name="T:Microsoft.Xrm.Portal.IPortalContext">
            <summary>
            Contains the <see cref="P:Microsoft.Xrm.Portal.IPortalContext.Entity"/> instances that are relevant to a single portal page request.
            </summary>
        </member>
        <member name="P:Microsoft.Xrm.Portal.IPortalContext.ServiceContext">
            <summary>
            The <see cref="T:Microsoft.Xrm.Sdk.Client.OrganizationServiceContext"/> used to obtain the <see cref="P:Microsoft.Xrm.Portal.IPortalContext.Entity"/> instances of the portal context.
            </summary>
        </member>
        <member name="P:Microsoft.Xrm.Portal.IPortalContext.Website">
            <summary>
            The configured website.
            </summary>
        </member>
        <member name="P:Microsoft.Xrm.Portal.IPortalContext.User">
            <summary>
            The current authenticated contact.
            </summary>
        </member>
        <member name="P:Microsoft.Xrm.Portal.IPortalContext.Entity">
            <summary>
            The current entity.
            </summary>
        </member>
        <member name="P:Microsoft.Xrm.Portal.IPortalContext.Path">
            <summary>
            The current virtual path.
            </summary>
        </member>
        <member name="P:Microsoft.Xrm.Portal.IPortalContext.StatusCode">
            <summary>
            The current status code.
            </summary>
        </member>
        <member name="M:Microsoft.Xrm.Portal.PortalContext.Initialize(System.String,System.Collections.Specialized.NameValueCollection)">
            <summary>
            Initializes custom settings.
            </summary>
            <param name="name"></param>
            <param name="config"></param>
        </member>
        <member name="M:Microsoft.Xrm.Portal.PortalContext.GetTimeZone">
            <summary>
            Returns the timezone for the website.
            </summary>
            <returns></returns>
        </member>
        <member name="P:Microsoft.Xrm.Portal.PortalContext.Current">
            <summary>
            An accessor to the current portal instance.
            </summary>
        </member>
        <member name="P:Microsoft.Xrm.Portal.PortalContext.ServiceContext">
            <summary>
            The <see cref="T:Microsoft.Xrm.Sdk.Client.OrganizationServiceContext"/> used to obtain the <see cref="P:Microsoft.Xrm.Portal.PortalContext.Entity"/> instances of the portal context.
            </summary>
        </member>
        <member name="P:Microsoft.Xrm.Portal.PortalContext.Request">
            <summary>
            The current request.
            </summary>
        </member>
        <member name="P:Microsoft.Xrm.Portal.PortalContext.Website">
            <summary>
            The configured website.
            </summary>
        </member>
        <member name="P:Microsoft.Xrm.Portal.PortalContext.User">
            <summary>
            The current authenticated contact.
            </summary>
        </member>
        <member name="P:Microsoft.Xrm.Portal.PortalContext.Entity">
            <summary>
            The current entity determined by the <see cref="T:Microsoft.Xrm.Portal.Web.CrmSiteMapProvider"/>.
            </summary>
        </member>
        <member name="P:Microsoft.Xrm.Portal.PortalContext.StatusCode">
            <summary>
            The current status code determined by the <see cref="T:Microsoft.Xrm.Portal.Web.CrmSiteMapProvider"/>.
            </summary>
        </member>
        <member name="P:Microsoft.Xrm.Portal.PortalContext.Path">
            <summary>
            The current virtual path determined by the <see cref="T:Microsoft.Xrm.Portal.Web.CrmSiteMapProvider"/>.
            </summary>
        </member>
        <member name="T:Microsoft.Xrm.Portal.Web.Handlers.AnnotationHandler">
            <summary>
            A handler for serving annotation files.
            </summary>
            <remarks>
            The <see cref="T:System.Web.HttpCachePolicy"/> cache policy can be adjusted by the following configuration.
            <code>
            <![CDATA[
            <configuration>
            
             <configSections>
              <section name="microsoft.xrm.portal" type="Microsoft.Xrm.Portal.Configuration.PortalCrmSection, Microsoft.Xrm.Portal"/>
             </configSections>
            
             <microsoft.xrm.portal>
              <cachePolicy>
               <annotation
                cacheExtension=""
                cacheability="ServerAndPrivate" [NoCache | Private | Public | Server | ServerAndNoCache | ServerAndPrivate]
                expires=""
                maxAge="01:00:00" [HH:MM:SS]
                revalidation="" [AllCaches | ProxyCaches | None]
                slidingExpiration="" [false | true]
                validUntilExpires="" [false | true]
                varyByCustom=""
                varyByContentEncodings="gzip;x-gzip;deflate"
                varyByContentHeaders=""
                varyByParams=""
                />
              </cachePolicy>
             </microsoft.xrm.portal>
             
            </configuration>
            ]]>
            </code>
            </remarks>
            <seealso cref="T:Microsoft.Xrm.Portal.Configuration.PortalCrmConfigurationManager"/>
            <seealso cref="T:Microsoft.Xrm.Portal.Configuration.HttpCachePolicyElement"/>
        </member>
        <member name="M:Microsoft.Xrm.Portal.Web.Handlers.AnnotationHandler.SetResponseParameters(System.Web.HttpResponse,Microsoft.Xrm.Sdk.Entity)">
            <summary>
             Sets the http response parameters for status code, caching, and headers.
            </summary>
        </member>
        <member name="T:Microsoft.Xrm.Portal.ServiceBus.ServiceBusConnection">
            <summary>
            The connection settings for initializing a <see cref="T:Microsoft.Xrm.Portal.ServiceBus.ServiceBusChannelFactory`3"/> or a <see cref="T:Microsoft.Xrm.Portal.ServiceBus.ServiceBusServiceHost`2"/>.
            </summary>
            <remarks>
            <example>
            An example configuration. The connection values should be in the <see cref="T:System.Data.Common.DbConnectionStringBuilder"/> format.
            <code>
            <![CDATA[
            <configuration>
             <connectionStrings>
              <add name="ServiceBus" connectionString="Service Namespace=...; Service Path=...; Issuer Name=...; Issuer Secret=...; Include Exception Detail In Faults=true"/>
             </connectionStrings>
            </configuration>
            ]]>
            </code>
            </example>
            <example>
            Creating a connection by configuration.
            <code>
            var connection = new ServiceBusConnection("ServiceBus");
            </code>
            </example>
            <example>
            Creating a connection in code.
            <code>
            var connection = ServiceBusConnection.Parse("Service Namespace=...; Service Path=...; Issuer Name=...; Issuer Secret=...; Include Exception Detail In Faults=true");
            </code>
            </example>
            </remarks>
        </member>
        <member name="M:Microsoft.Xrm.Portal.ServiceBus.ServiceBusConnection.GetTransportClientEndpointBehavior">
            <summary>
            Builds an endpoint from the connection.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Microsoft.Xrm.Portal.ServiceBus.ServiceBusConnection.Parse(System.String)">
            <summary>
            Parses a string in the <see cref="T:System.Data.Common.DbConnectionStringBuilder"/> format.
            </summary>
            <param name="connectionString"></param>
            <returns></returns>
        </member>
        <member name="P:Microsoft.Xrm.Portal.ServiceBus.ServiceBusConnection.ServiceNamespace">
            <summary>
            The AppFabric Service Bus service namespace.
            </summary>
        </member>
        <member name="P:Microsoft.Xrm.Portal.ServiceBus.ServiceBusConnection.Scheme">
            <summary>
            The AppFabric Service Bus protocol. The default value is "sb".
            </summary>
        </member>
        <member name="P:Microsoft.Xrm.Portal.ServiceBus.ServiceBusConnection.ServicePath">
            <summary>
            The AppFabric Service Bus service path.
            </summary>
        </member>
        <member name="P:Microsoft.Xrm.Portal.ServiceBus.ServiceBusConnection.IncludeExceptionDetailInFaults">
            <summary>
            Enables exception details in service faults.
            </summary>
        </member>
        <member name="P:Microsoft.Xrm.Portal.ServiceBus.ServiceBusConnection.DiscoveryType">
            <summary>
            The AppFabric Service Bus discovery type.
            </summary>
        </member>
        <member name="M:Microsoft.Xrm.Portal.Core.OrganizationServiceContextExtensions.AddNoteAndSave(Microsoft.Xrm.Sdk.Client.OrganizationServiceContext,Microsoft.Xrm.Sdk.Entity,System.String,System.String)">
            <summary>
            Add a Note to an entity.
            </summary>
            <param name="context">The service context</param>
            <param name="entity">The entity to which a note will be attached.</param>
            <param name="noteTitle"></param>
            <param name="noteText">The text of the note.</param>
            <returns>True if successful; otherwise, false.</returns>
            <remarks>
            <para>The provided <paramref name="entity"/> must already be persisted to the CRM for this operation to succeed.</para>
            <para>It it not necessary to SaveChanges after this operation--this operation fully persists this note to CRM.</para>
            </remarks>
        </member>
        <member name="M:Microsoft.Xrm.Portal.Core.OrganizationServiceContextExtensions.AddNoteAndSave(Microsoft.Xrm.Sdk.Client.OrganizationServiceContext,Microsoft.Xrm.Sdk.Entity,System.String,System.String,System.String,System.String,System.Byte[])">
            <summary>
            Add a note to an entity.
            </summary>
            <param name="context">The service context</param>
            <param name="entity">The entity to which a note will be attached.</param>
            <param name="noteTitle"></param>
            <param name="noteText">The text of the note.</param>
            <param name="fileName">The name of the file to attach to this note.</param>
            <param name="contentType">The MIME type of the file to attach to this note.</param>
            <param name="fileContent">The raw byte data of the file to attach to this note.</param>
            <returns>True if successful; otherwise, false.</returns>
            <remarks>
            <para>The provided <paramref name="entity"/> must already be persisted to the CRM for this operation to succeed.</para>
            <para>It it not necessary to SaveChanges after this operation--this operation fully persists this note to CRM.</para>
            </remarks>
        </member>
        <member name="M:Microsoft.Xrm.Portal.Core.OrganizationServiceContextExtensions.AddNoteAndSave(Microsoft.Xrm.Sdk.Client.OrganizationServiceContext,Microsoft.Xrm.Sdk.Entity,System.String,System.String,System.Web.HttpPostedFile)">
            <summary>
            Add a note to an entity.
            </summary>
            <param name="context">The service context</param>
            <param name="entity">The entity to which a note will be attached.</param>
            <param name="noteTitle"></param>
            <param name="noteText">The text of the note.</param>
            <param name="file">The file to attach with this note.</param>
            <returns>True if successful; otherwise, false.</returns>
            <remarks>
            <para>The provided <paramref name="entity"/> must already be persisted to the CRM for this operation to succeed.</para>
            <para>It it not necessary to SaveChanges after this operation--this operation fully persists this note to CRM.</para>
            </remarks>
        </member>
        <member name="M:Microsoft.Xrm.Portal.Core.OrganizationServiceContextExtensions.SetCaseStatusAndSave(Microsoft.Xrm.Sdk.Client.OrganizationServiceContext,Microsoft.Xrm.Sdk.Entity,System.String,System.String)">
            <summary>
            Change the state of a case.
            </summary>
            <param name="context">The service context</param>
            <param name="incident">The Case to change.</param>
            <param name="state">The state to change to.</param>
            <param name="resolutionSubject"></param>
            <returns>The updated Case.</returns>
            <remarks>
            <para>The provided <paramref name="incident"/> must already be persisted to the CRM for this operation to succeed.</para>
            <para>It it not necessary to SaveChanges after this operation--this operation fully persists the state change to CRM.</para>
            </remarks>
        </member>
        <member name="M:Microsoft.Xrm.Portal.Core.OrganizationServiceContextExtensions.SetOpportunityStatusAndSave(Microsoft.Xrm.Sdk.Client.OrganizationServiceContext,Microsoft.Xrm.Sdk.Entity,System.String,System.Decimal)">
            <summary>
            Change the state of an opportunity.
            </summary>
            <param name="context">The service context</param>
            <param name="opportunity">The Opportunity to change.</param>
            <param name="state">The state to change to.</param>
            <param name="actualRevenue">The actual revenue of the opportunity.</param>
            <returns>The updated Opportunity.</returns>
            <remarks>
            <para>The provided <paramref name="opportunity"/> must already be persisted to the CRM for this operation to succeed.</para>
            <para>It it not necessary to SaveChanges after this operation--this operation fully persists the state change to CRM.</para>
            </remarks>
        </member>
        <member name="T:Microsoft.Xrm.Portal.Cms.WebsiteSelectors.IWebsiteSelector">
            <summary>
            Provides the ability to select the current website <see cref="T:Microsoft.Xrm.Sdk.Entity"/>.
            </summary>
        </member>
        <member name="M:Microsoft.Xrm.Portal.Cms.WebsiteSelectors.IWebsiteSelector.GetWebsite(Microsoft.Xrm.Sdk.Client.OrganizationServiceContext,System.Web.Routing.RequestContext)">
            <summary>
            Selects the website entity.
            </summary>
            <param name="context"></param>
            <param name="request"></param>
            <returns></returns>
        </member>
        <member name="T:Microsoft.Xrm.Portal.Web.UI.WebControls.CrmEntityDataBoundControl">
            <summary>
            Abstract base class for databound controls that bind to a single entity (or to a property of
            a single entity).
            </summary>
        </member>
        <member name="P:Microsoft.Xrm.Portal.Web.UI.WebControls.CrmEntityDataBoundControl.DataItem">
            <summary>
            Gets or sets the entity data item to which this control will bind.
            </summary>
            <remarks>
            If this property is set, the control will databind to this object automatically.
            </remarks>
        </member>
        <member name="P:Microsoft.Xrm.Portal.Web.UI.WebControls.CrmEntityDataBoundControl.Format">
            <summary>
            Gets or sets a custom format string through which the rendered value will be formatted.
            </summary>
            <remarks>
            The object value to which this control is bound will be passed through <see cref="M:System.String.Format(System.String,System.Object)"/>.
            </remarks>
        </member>
        <member name="P:Microsoft.Xrm.Portal.Web.UI.WebControls.CrmEntityDataBoundControl.HtmlEncode">
            <summary>
            Gets or sets the flag to perform an HtmlEncode on the output.
            </summary>
        </member>
        <member name="P:Microsoft.Xrm.Portal.Web.UI.WebControls.CrmEntityDataBoundControl.ItemTemplate">
            <summary>
            Gets or sets the template that defines how the contained controls are displayed.
            </summary>
        </member>
        <member name="P:Microsoft.Xrm.Portal.Web.UI.WebControls.CrmEntityDataBoundControl.PropertyName">
            <summary>
            Gets or sets the property name to retrieve a value from.
            This attribute can be a comma-delimited set of property names of which the first not null value will be retrieved.
            </summary>
            <example>
            "Title" will attempt to retrieve the Title property of the bound Entity.
            "Summary, Description, Copy" will attempt to retrieve the Summary property followed by the Description and lastly the Copy property, if both Summary and Description were null.
            </example>
        </member>
        <member name="P:Microsoft.Xrm.Portal.Web.UI.WebControls.EditableCrmEntityDataBoundControl.CmsServiceBaseUri">
            <summary>
            Gets or sets the base URI of the data service to be used for front-side editing functionality
            provided by this control. Set to use a data service other than the system global/default service.
            </summary>
        </member>
        <member name="P:Microsoft.Xrm.Portal.Web.UI.WebControls.EditableCrmEntityDataBoundControl.Editable">
            <summary>
            Gets or sets a Boolean value indication whether or not this property value will be inline editable
            (provided the user has edit permission, and no other properties have been set on this control which
            disable inline editing support).
            </summary>
        </member>
        <member name="T:Microsoft.Xrm.Portal.Web.Security.LiveIdMembershipProvider">
            <summary>
            A pseudo membership provider to enable the use of some .NET login controls.
            </summary>
            <remarks>
            Configuration format.
            <code>
            <![CDATA[
            <configuration>
            
             <connectionStrings>
              <add name="Xrm" connectionString="ServiceUri=...; Domain=...; Username=...; Password=..."/>
              <add name="Live" connectionString="Application Id=...; Secret=..."/>
             </connectionStrings>
            
             <system.web>
             
              <machineKey validationKey="..." decryptionKey="..." validation="SHA1" decryption="AES"/>
              
              <membership defaultProvider="Xrm">
               <providers>
                <add
                 name="Xrm"
                 type="Microsoft.Xrm.Portal.Web.Security.LiveIdMembershipProvider"
                 liveIdConnectionStringName="Live"
                 connectionStringName="Xrm"
                 contextName="Xrm" [Microsoft.Xrm.Client.Configuration.OrganizationServiceContextElement]
                />
               </providers>
              </membership>
              
             </system.web>
             
             <system.webServer>
              <handlers>
               <add
                name="LiveId" verb="*"
                path="LiveId.axd"
                type="Microsoft.Xrm.Portal.Web.Handlers.LiveIdWebAuthenticationHandler, Microsoft.Xrm.Portal"
                preCondition="integratedMode"/>
              </handlers>
             </system.webServer>
            
            </configuration>
            ]]>
            </code>
            </remarks>
            <seealso cref="T:Microsoft.Xrm.Client.Configuration.OrganizationServiceContextElement"/>
            <seealso cref="T:Microsoft.Xrm.Portal.Configuration.PortalCrmConfigurationManager"/>
            <seealso cref="T:Microsoft.Xrm.Client.Configuration.CrmConfigurationManager"/>
        </member>
        <member name="M:Microsoft.Xrm.Portal.Web.Security.LiveIdMembershipProvider.Initialize(System.String,System.Collections.Specialized.NameValueCollection)">
            <summary>
            Initializes the provider with the property values specified in the ASP.NET application's configuration file.
            </summary>
        </member>
        <member name="M:Microsoft.Xrm.Portal.Web.Security.LiveIdMembershipProvider.CreateUser(System.String,System.Boolean)">
            <summary>
            Creates the Live ID user and authenticates with forms authentication if <paramref name="setUserOnline"/> is true.
            </summary>
            <param name="token">The token returned from Live ID that contains information about the user.</param>
            <param name="setUserOnline">If true, the user will be authenticated once created.</param>
            <returns>
            A <see cref="T:System.Web.Security.MembershipUser"/> object populated with the information for the newly created user.
            </returns>
        </member>
        <member name="M:Microsoft.Xrm.Portal.Web.Security.LiveIdMembershipProvider.CreateUser(System.String,System.String,System.String,System.String,System.String,System.Boolean,System.Object,System.Web.Security.MembershipCreateStatus@)">
            <summary>
            Adds a new membership user to the data source.
            </summary>
            <returns>
            A <see cref="T:System.Web.Security.MembershipUser" /> object populated with the information for the newly created user.
            </returns>
            <param name="username">The user name for the new user.</param>
            <param name="password">NOT SUPPORTED.</param>
            <param name="email">NOT SUPPORTED.</param>
            <param name="passwordQuestion">NOT SUPPORTED.</param>
            <param name="passwordAnswer">NOT SUPPORTED.</param>
            <param name="isApproved">NOT SUPPORTED.</param>
            <param name="providerUserKey">NOT SUPPORTED.</param>
            <param name="status">A <see cref="T:System.Web.Security.MembershipCreateStatus" /> enumeration value indicating whether the user was created successfully.</param>
        </member>
        <member name="M:Microsoft.Xrm.Portal.Web.Security.LiveIdMembershipProvider.DeleteUser(System.String,System.Boolean)">
            <summary>
            Removes a user from the membership data source. 
            </summary>
            <returns>
            true if the user was successfully deleted; otherwise, false.
            </returns>
            <param name="username">The name of the user to delete.</param>
            <param name="deleteAllRelatedData">true to delete data related to the user from the database; false to leave data related to the user in the database.</param>
        </member>
        <member name="M:Microsoft.Xrm.Portal.Web.Security.LiveIdMembershipProvider.GetPuid(System.String)">
            <summary>
            Gets the Passport Unique Identifier from a Windows Live ID token.
            </summary>
        </member>
        <member name="M:Microsoft.Xrm.Portal.Web.Security.LiveIdMembershipProvider.GetUser(System.Object,System.Boolean)">
            <summary>
            Gets user information from the data source based on the unique identifier for the membership user. Provides an option to update the last-activity date/time stamp for the user.
            </summary>
            <returns>
            A <see cref="T:System.Web.Security.MembershipUser" /> object populated with the specified user's information from the data source.
            </returns>
            <param name="providerUserKey">The unique identifier for the membership user to get information for.</param>
            <param name="userIsOnline">true to update the last-activity date/time stamp for the user; false to return user information without updating the last-activity date/time stamp for the user.</param>
        </member>
        <member name="M:Microsoft.Xrm.Portal.Web.Security.LiveIdMembershipProvider.GetUser(System.String,System.Boolean)">
            <summary>
            Gets information from the data source for a user. Provides an option to update the last-activity date/time stamp for the user.
            </summary>
            <returns>
            A <see cref="T:System.Web.Security.MembershipUser" /> object populated with the specified user's information from the data source.
            </returns>
            <param name="username">The name of the user to get information for. </param>
            <param name="userIsOnline">true to update the last-activity date/time stamp for the user; false to return user information without updating the last-activity date/time stamp for the user. </param>
        </member>
        <member name="M:Microsoft.Xrm.Portal.Web.Security.LiveIdMembershipProvider.SetUserOnline(System.String)">
            <summary>
            Sets a user as authenticated using forms authentication and the Windows Live ID token.
            </summary>
            <param name="token">The Windows Live ID token that contains the user to set as authenticated.</param>
            <returns>true if successful; otherwise, false</returns>
        </member>
        <member name="M:Microsoft.Xrm.Portal.Web.Security.LiveIdMembershipProvider.UpdateUser(System.Web.Security.MembershipUser)">
            <summary>
            Updates information about a user in the data source.
            </summary>
            <param name="user">A <see cref="T:System.Web.Security.MembershipUser" /> object that represents the user to update and the updated information for the user. </param>
        </member>
        <member name="M:Microsoft.Xrm.Portal.Web.Security.LiveIdMembershipProvider.ValidateUser(System.String,System.String)">
            <summary>
            Verifies that the specified user id exists in the data source and is approved.
            </summary>
            <returns>
            true if the specified username exists and is approved; otherwise, false.
            </returns>
            <param name="username">The id of the user.</param>
            <param name="password">NOT SUPPORTED.</param>
        </member>
        <member name="P:Microsoft.Xrm.Portal.Web.Security.LiveIdMembershipProvider.AppId">
            <summary>
            The Windows Live Application ID.
            </summary>
        </member>
        <member name="P:Microsoft.Xrm.Portal.Web.Security.LiveIdMembershipProvider.ApplicationName">
            <summary>
            The name of the application using the membership provider.
            </summary>
        </member>
        <member name="P:Microsoft.Xrm.Portal.Web.Security.LiveIdMembershipProvider.ConnectionStringName">
            <summary>
            The name of the <see cref="T:Microsoft.Xrm.Client.CrmConnection"/> used by the provider.
            </summary>
        </member>
        <member name="P:Microsoft.Xrm.Portal.Web.Security.LiveIdMembershipProvider.LiveIdConnectionStringName">
            <summary>
            The name of the Live ID connection used by the provider.
            </summary>
        </member>
        <member name="P:Microsoft.Xrm.Portal.Web.Security.LiveIdMembershipProvider.Current">
            <summary>
            Accessor to the single available <see cref="T:Microsoft.Xrm.Portal.Web.Security.LiveIdMembershipProvider"/> provider.
            </summary>
        </member>
        <member name="T:Microsoft.Xrm.Portal.Web.ICrmSiteMapNodeValidator">
            <summary>
            Interface representing validation logic for a <see cref="T:Microsoft.Xrm.Portal.Web.CrmSiteMapNode"/>.
            </summary>
        </member>
        <member name="T:Microsoft.Xrm.Portal.Web.CrmSiteMapProvider">
            <summary>
            A <see cref="T:System.Web.SiteMapProvider"/> for navigating portal <see cref="T:Microsoft.Xrm.Sdk.Entity"/> hierarchies.
            </summary>
            <remarks>
            Configuration format.
            <code>
            <![CDATA[
            <configuration>
            
             <system.web>
              <siteMap enabled="true" defaultProvider="Xrm">
               <providers>
                <add
                 name="Xrm"
                 type="Microsoft.Xrm.Portal.Web.CrmSiteMapProvider"
                 securityTrimmingEnabled="true"
                 portalName="Xrm" [Microsoft.Xrm.Portal.Configuration.PortalContextElement]
                />
               </providers>
              </siteMap>
             </system.web>
             
            </configuration>
            ]]>
            </code>
            </remarks>
            <seealso cref="T:Microsoft.Xrm.Portal.Configuration.PortalContextElement"/>
            <seealso cref="T:Microsoft.Xrm.Portal.Configuration.PortalCrmConfigurationManager"/>
            <seealso cref="T:Microsoft.Xrm.Client.Configuration.CrmConfigurationManager"/>
        </member>
        <member name="T:Microsoft.Xrm.Portal.Web.CrmSiteMapProviderBase">
            <summary>
            Abstract base class for XRM <see cref="T:System.Web.SiteMapProvider"/>s, containing shared configuration and
            security validation logic.
            </summary>
        </member>
        <member name="T:Microsoft.Xrm.Portal.Caching.ServiceBusCacheServiceBehavior">
            <summary>
            Custom service bus behavior for the <see cref="T:Microsoft.Xrm.Portal.Caching.CacheServiceBusServiceHost"/>.
            </summary>
        </member>
        <member name="T:Microsoft.Xrm.Portal.Configuration.CrmEntitySecurityProviderElement">
            <summary>
            The configuration settings for <see cref="T:Microsoft.Xrm.Client.Security.ICrmEntitySecurityProvider"/> dependencies.
            </summary>
            <remarks>
            For an example of the configuration format refer to the <see cref="T:Microsoft.Xrm.Portal.Configuration.PortalCrmConfigurationManager"/>.
            </remarks>
        </member>
        <member name="M:Microsoft.Xrm.Portal.Configuration.CrmEntitySecurityProviderElement.CreateCrmEntitySecurityProvider">
            <summary>
            Returns a new instance of the configured <see cref="T:Microsoft.Xrm.Client.Security.ICrmEntitySecurityProvider"/>.
            </summary>
            <returns></returns>
        </member>
        <member name="P:Microsoft.Xrm.Portal.Configuration.CrmEntitySecurityProviderElement.Name">
            <summary>
            Gets or sets the element name.
            </summary>
        </member>
        <member name="P:Microsoft.Xrm.Portal.Configuration.CrmEntitySecurityProviderElement.Type">
            <summary>
            The dependency type name.
            </summary>
        </member>
        <member name="T:Microsoft.Xrm.Portal.Web.UI.WebControls.Snippet">
            <summary>
            Renders the value (adx_value) property of a content snippet (adx_contentsnippet).
            </summary>
        </member>
        <member name="T:Microsoft.Xrm.Portal.Web.UI.WebControls.Property">
            <summary>
            Renders the value of an <see cref="T:Microsoft.Xrm.Sdk.Entity"/>'s property.
            </summary>
        </member>
        <member name="P:Microsoft.Xrm.Portal.Web.UI.WebControls.Property.DefaultText">
            <summary>
            Gets or sets a default text string to be rendered if the property value(s) targeted by this control
            is(are) null or empty.
            </summary>
        </member>
        <member name="P:Microsoft.Xrm.Portal.Web.UI.WebControls.Property.EditType">
            <summary>
            Gets or sets the string identifier of the type of editing interface to provide for this
            property (e.g., "html" or "text").
            </summary>
        </member>
        <member name="P:Microsoft.Xrm.Portal.Web.UI.WebControls.Property.Literal">
            <summary>
            Gets or sets a Boolean value indicating whether or not this control should render as a literal
            value, i.e., only the raw text value of the bound property will be rendered, with no surrounding
            DOM nodes.
            </summary>
            <remarks>
            Setting this value to true disables any inline editing support for the bound property.
            </remarks>
        </member>
        <member name="T:Microsoft.Xrm.Portal.Web.UI.WebControls.CrmDataSource">
            <summary>
            Represents a Microsoft Dynamics CRM web service to data-bound controls.
            </summary>
        </member>
        <member name="M:Microsoft.Xrm.Portal.Web.UI.WebControls.CrmDataSource.Delete(System.Collections.IDictionary,System.Collections.IDictionary)">
            <summary>
            Deletes an entity.
            </summary>
            <param name="keys">The keys by which to find the entity. "ID" and "Name" must be specified.</param>
            <param name="oldValues">The entity properties before the update. Key: Property name e.g. "firstname" Value: Value of the property e.g. "Jane"</param>
            <returns>1 if successful; otherwise, 0.</returns>
        </member>
        <member name="M:Microsoft.Xrm.Portal.Web.UI.WebControls.CrmDataSource.Insert(System.Collections.IDictionary,System.String)">
            <summary>
            Creates a new entity.
            </summary>
            <param name="values">The entity properties. Key: Property name e.g. "firstname" Value: Value of the property e.g. "Jane"</param>
            <param name="entityName">The type of entity to create e.g. "contact"</param>
            <returns>1 if successful; otherwise, 0.</returns>
        </member>
        <member name="M:Microsoft.Xrm.Portal.Web.UI.WebControls.CrmDataSource.Update(System.Collections.IDictionary,System.Collections.IDictionary,System.Collections.IDictionary)">
            <summary>
            Updates an entity.
            </summary>
            <param name="keys">The keys by which to find the entity to be updated. "ID" and "Name" must be specified.</param>
            <param name="values">The entity properties to update. Key: Property name e.g. "firstname" Value: Value of the property e.g. "Jane"</param>
            <param name="oldValues">The entity properties before the update.</param>
            <returns>1 if successful; otherwise, 0.</returns>
        </member>
        <member name="P:Microsoft.Xrm.Portal.Web.UI.WebControls.CrmDataSource.CrmDataContextName">
            <summary>
            Gets or sets the name of the data context used to perform service operations.
            </summary>
        </member>
        <member name="P:Microsoft.Xrm.Portal.Web.UI.WebControls.CrmDataSource.FetchXml">
            <summary>
            Gets or sets the fetch XML query.
            </summary>
        </member>
        <member name="P:Microsoft.Xrm.Portal.Web.UI.WebControls.CrmDataSource.QueryByAttribute">
            <summary>
            Gets the QueryByAttribute parameters.
            </summary>
        </member>
        <member name="P:Microsoft.Xrm.Portal.Web.UI.WebControls.CrmDataSource.SelectParameters">
            <summary>
            Gets the parameters collection that contains the parameters that are used when selecting data.
            </summary>
        </member>
        <member name="P:Microsoft.Xrm.Portal.Web.UI.WebControls.CrmDataSource.QueryParameters">
            <summary>
            Gets the parameters collection that contains the parameters that are used when querying data.
            </summary>
        </member>
        <member name="P:Microsoft.Xrm.Portal.Web.UI.WebControls.CrmDataSource.EncodeParametersEnabled">
            <summary>
            Gets or sets the option to HtmlEncode the parameter values when constructing the FetchXml as a means of input validation.
            </summary>
        </member>
        <member name="P:Microsoft.Xrm.Portal.Web.UI.WebControls.CrmDataSource.StaticEntityWrapperTypeName">
            <summary>
            Gets or sets the type name of the static class type to emit. The DynamicEntityWrapper is converted to an object of this type.
            </summary>
        </member>
        <member name="P:Microsoft.Xrm.Portal.Web.UI.WebControls.CrmDataSource.CacheParameters">
            <summary>
            Gets the cache settings.
            </summary>
        </member>
        <member name="M:Microsoft.Xrm.Portal.Web.Data.Services.CmsDataServiceProvider.DeleteEntity(Microsoft.Xrm.Sdk.Client.OrganizationServiceContext,System.String,System.Guid)">
            <summary>
            Service operation to soft-delete an entity. ("Soft" in that it may not actually delete the entity,
            but may instead change it to a different state, archive it, etc.)
            </summary>
        </member>
        <member name="M:Microsoft.Xrm.Portal.Web.Data.Services.CmsDataServiceProvider.GetEntitySetsWithRights``1(System.Collections.Generic.Dictionary{System.String,System.Data.Services.EntitySetRights})">
            <summary>
            Gets mappings of <see cref="T:System.Linq.IQueryable`1"/> entity set names exposed by TDataContext and
            the <see cref="T:System.Data.Services.EntitySetRights"/> to assign to those sets at service initialization.
            </summary>
        </member>
        <member name="T:Microsoft.Xrm.Portal.Web.CompositeCrmSiteMapNodeValidator">
            <summary>
            Composes multiple <see cref="T:Microsoft.Xrm.Portal.Web.ICrmSiteMapNodeValidator"/>s into a single validator for which
            the <see cref="M:Microsoft.Xrm.Portal.Web.CompositeCrmSiteMapNodeValidator.Validate(Microsoft.Xrm.Sdk.Client.OrganizationServiceContext,Microsoft.Xrm.Portal.Web.CrmSiteMapNode)"/> method on each composed validator must return true.
            </summary>
        </member>
        <member name="T:Microsoft.Xrm.Portal.Configuration.PortalCrmConfigurationManager">
            <summary>
            Methods for retrieving portal dependencies from the configuration.
            </summary>
            <remarks>
            <example>
            Examples of dependency creation.
            <code>
            var name = "Xrm";
            
            // retrieve by configuration
            var portal = PortalCrmConfigurationManager.CreatePortalContext(name);
            
            // retrieve by instantiation
            var myConnection = CrmConnection.Parse("ServiceUri=...; Domain=...; UserName=...; Password=...;");
            var myObjectCache = MemoryCache.Default;
            var myServiceCache = new OrganizationServiceCache(myObjectCache, myConnection);
            var myService = new CachedOrganizationService(myConnection, myServiceCache);
            var myContext = new OrganizationServiceContext(myService);
            var myPortal = new PortalContext(myContext);
            </code>
            
            Format of configuration (where a custom <see cref="T:Microsoft.Xrm.Sdk.Client.OrganizationServiceContext"/> class called XrmServiceContext exists in the Xrm.dll assembly).
            <code>
            <![CDATA[
            <configuration>
            
             <configSections>
              <section name="microsoft.xrm.client" type="Microsoft.Xrm.Client.Configuration.CrmSection, Microsoft.Xrm.Client"/>
              <section name="microsoft.xrm.portal" type="Microsoft.Xrm.Portal.Configuration.PortalCrmSection, Microsoft.Xrm.Portal"/>
             </configSections>
            
             <connectionStrings>
              <add name="Xrm" connectionString="ServiceUri=...; Domain=...; Username=...; Password=..."/>
             </connectionStrings>
             
             <microsoft.xrm.client>
              <contexts default="Xrm">
               <add name="Xrm" type="Xrm.XrmServiceContext, Xrm" connectionStringName="Xrm"/>
              </contexts>
             </microsoft.xrm.client>
             
             <microsoft.xrm.portal
              serviceBusObjectCacheName="microsoft.xrm.portal"
              rewriteVirtualPathEnabled="true" [false | true]
              >
              
              <portals default="Xrm">
               <add
                name="Xrm"
                websiteName="My Portal"
                contextName="Xrm"
                cmsServiceBaseUri="~/Services/Cms.svc"
                instanceMode="PerRequest" [PerRequest | PerInstance]
                mergeOption="AppendOnly" [AppendOnly | OverwriteChanges | PreserveChanges | NoTracking]
                >
                 <websiteSelector type="Microsoft.Xrm.Portal.Cms.WebsiteSelectors.NameWebsiteSelector, Microsoft.Xrm.Portal"/>
                 <dependencyProvider type="Microsoft.Xrm.Portal.Configuration.DependencyProvider, Microsoft.Xrm.Portal"/>
                 <crmEntitySecurityProvider type="Microsoft.Xrm.Portal.Cms.Security.CmsCrmEntitySecurityProvider, Microsoft.Xrm.Portal"/>
                </add>
              </portals>
             
              <cachePolicy>
               <embeddedResource
                cacheExtension=""
                cacheability="ServerAndPrivate" [NoCache | Private | Public | Server | ServerAndNoCache | ServerAndPrivate]
                expires=""
                maxAge="01:00:00" [HH:MM:SS]
                revalidation="" [AllCaches | ProxyCaches | None]
                slidingExpiration="" [false | true]
                validUntilExpires="" [false | true]
                varyByCustom=""
                varyByContentEncodings="gzip;x-gzip;deflate"
                varyByContentHeaders=""
                varyByParams=""
                />
               <annotation
                cacheExtension=""
                cacheability="ServerAndPrivate" [NoCache | Private | Public | Server | ServerAndNoCache | ServerAndPrivate]
                expires=""
                maxAge="01:00:00" [HH:MM:SS]
                revalidation="" [AllCaches | ProxyCaches | None]
                slidingExpiration="" [false | true]
                validUntilExpires="" [false | true]
                varyByCustom=""
                varyByContentEncodings="gzip;x-gzip;deflate"
                varyByContentHeaders=""
                varyByParams=""
                />
              </cachePolicy>
            
             </microsoft.xrm.portal>
             
            </configuration>
            ]]>
            </code>
            
            Minimum required configuration to configure an <see cref="T:Microsoft.Xrm.Portal.IPortalContext"/>.
            <code>
            <![CDATA[
            <configuration>
            
             <configSections>
              <section name="microsoft.xrm.client" type="Microsoft.Xrm.Client.Configuration.CrmSection, Microsoft.Xrm.Client"/>
              <section name="microsoft.xrm.portal" type="Microsoft.Xrm.Portal.Configuration.PortalCrmSection, Microsoft.Xrm.Portal"/>
             </configSections>
            
             <connectionStrings>
              <add name="Xrm" connectionString="ServiceUri=...; Domain=...; Username=...; Password=..."/>
             </connectionStrings>
             
             <microsoft.xrm.client>
              <contexts>
               <add name="Xrm" type="Xrm.XrmServiceContext, Xrm"/>
              </contexts>
             </microsoft.xrm.client>
             
             <microsoft.xrm.portal>
              <portals>
               <add name="My Portal"/>
              </portals>
             </microsoft.xrm.portal>
             
             <location path="Services/Cms.svc">
              <system.web>
               <authorization>
                <allow roles="My Portal Administrators"/>
                <deny users="*"/>
               </authorization>
              </system.web>
             </location>
             
            </configuration>
            ]]>
            </code>
            
            If the website is hosting a custom <see cref="T:Microsoft.Xrm.Sdk.Client.OrganizationServiceContext"/> OData endpoint (at the path /Services/Cms.svc in these examples) then the
            endpoint should be protected with the following (in addition, the membership and role providers will need to be configured).
            <code>
            <![CDATA[
            <configuration>
            
             <location path="Services/Cms.svc">
              <system.web>
               <authorization>
                <allow roles="My Portal Administrators"/>
                <deny users="*"/>
               </authorization>
              </system.web>
             </location>
             
            </configuration>
            ]]>
            </code>
            </example>
            For further configuration details see <see cref="T:Microsoft.Xrm.Client.Configuration.CrmConfigurationManager"/>
            </remarks>
            <seealso cref="T:Microsoft.Xrm.Client.Configuration.CrmConfigurationManager"/>
            <seealso cref="T:Microsoft.Xrm.Portal.Configuration.PortalContextElement"/>
            <seealso cref="T:Microsoft.Xrm.Portal.PortalContext"/>
        </member>
        <member name="M:Microsoft.Xrm.Portal.Configuration.PortalCrmConfigurationManager.Reset">
            <summary>
            Resets the cached dependencies.
            </summary>
        </member>
        <member name="M:Microsoft.Xrm.Portal.Configuration.PortalCrmConfigurationManager.GetPortalCrmSection">
            <summary>
            Retrieves the configuration section.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Microsoft.Xrm.Portal.Configuration.PortalCrmConfigurationManager.GetPortalContextElement(System.String,System.Boolean)">
            <summary>
            Retrieves the configuration element for the portal.
            </summary>
            <param name="portalName"></param>
            <param name="allowDefaultFallback"></param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.Xrm.Portal.Configuration.PortalCrmConfigurationManager.CreateCrmEntitySecurityProvider(System.String)">
            <summary>
            Retrieves the configured <see cref="T:Microsoft.Xrm.Client.Security.ICrmEntitySecurityProvider"/>.
            </summary>
            <param name="portalName"></param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.Xrm.Portal.Configuration.PortalCrmConfigurationManager.CreateDependencyProvider(System.String)">
            <summary>
            Retrieves the configured <see cref="T:Microsoft.Xrm.Portal.Configuration.IDependencyProvider"/>.
            </summary>
            <param name="portalName"></param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.Xrm.Portal.Configuration.PortalCrmConfigurationManager.CreateOrganizationService(System.String,System.Boolean)">
            <summary>
            Retrieves the configured <see cref="T:Microsoft.Xrm.Sdk.IOrganizationService"/>.
            </summary>
            <param name="portalName"></param>
            <param name="allowDefaultFallback"></param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.Xrm.Portal.Configuration.PortalCrmConfigurationManager.CreatePortalContext(System.String,System.Web.Routing.RequestContext,System.Boolean)">
            <summary>
            Retrieves the configured <see cref="T:Microsoft.Xrm.Portal.IPortalContext"/>.
            </summary>
            <param name="portalName"></param>
            <param name="request"></param>
            <param name="allowDefaultFallback"></param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.Xrm.Portal.Configuration.PortalCrmConfigurationManager.CreateServiceContext(System.String,System.Boolean)">
            <summary>
            Retrieves the configured <see cref="T:Microsoft.Xrm.Sdk.Client.OrganizationServiceContext"/>.
            </summary>
            <param name="portalName"></param>
            <param name="allowDefaultFallback"></param>
            <returns></returns>
        </member>
        <member name="T:Microsoft.Xrm.Portal.Web.UI.WebControls.CrmSiteMapChildView">
            <summary>
            Displays the child <see cref="T:System.Web.SiteMapNode"/>s of a given starting <see cref="T:System.Web.SiteMapNode"/>, using user-defined templates.
            </summary>
            <remarks>
            <para>
            Though this control inherits from <see cref="T:System.Web.UI.WebControls.ListView"/>, which supports explicit custom data sources, this control only
            uses its own implicit data source. Attempting to set the data source of this control externally will cause exceptions.
            </para>
            <para>
            This control supports ADXSTUDIO XRM front-side editing, in the form of an interface to update the display orders of the
            rendered children. This interface will appear if the current user has <see cref="F:Microsoft.Xrm.Client.Security.CrmEntityRight.Change"/> access for the
            <see cref="T:Microsoft.Xrm.Client.CrmEntity"/> associated with the starting <see cref="T:Microsoft.Xrm.Portal.Web.CrmSiteMapNode"/>.
            </para>
            </remarks>
        </member>
        <member name="M:Microsoft.Xrm.Portal.Web.UI.WebControls.CrmSiteMapChildView.GetStartingNode">
            <summary>
            Gets the starting <see cref="T:System.Web.SiteMapNode"/> of this control.
            </summary>
        </member>
        <member name="P:Microsoft.Xrm.Portal.Web.UI.WebControls.CrmSiteMapChildView.CmsServiceBaseUri">
            <summary>
            Gets or sets the base URI of the data service to be used for front-side editing functionality
            provided by this control. Set to use a data service other than the system global/default service.
            </summary>
        </member>
        <member name="P:Microsoft.Xrm.Portal.Web.UI.WebControls.CrmSiteMapChildView.DataSource">
            <summary>
            Gets or sets the object from which the data-bound control retrieves its data items.
            </summary>
            <remarks>
            Setting this property is not supported by the control, and will raise a <see cref="T:System.NotSupportedException"/>.
            </remarks>
        </member>
        <member name="P:Microsoft.Xrm.Portal.Web.UI.WebControls.CrmSiteMapChildView.DataSourceID">
            <summary>
            Gets or sets the ID of the control from which the data-bound control retrieves its data items.
            </summary>
            <remarks>
            Setting this property is not supported by the control, and will raise a <see cref="T:System.NotSupportedException"/>.
            </remarks>
        </member>
        <member name="P:Microsoft.Xrm.Portal.Web.UI.WebControls.CrmSiteMapChildView.Editable">
            <summary>
            Gets or sets a Boolean value indication whether or not this property value will be inline editable
            (provided the user has edit permission, and no other properties have been set on this control which
            disable inline editing support).
            </summary>
        </member>
        <member name="P:Microsoft.Xrm.Portal.Web.UI.WebControls.CrmSiteMapChildView.LayoutTemplate">
            <summary>
            Gets or sets the custom content for the root container.
            </summary>
        </member>
        <member name="P:Microsoft.Xrm.Portal.Web.UI.WebControls.CrmSiteMapChildView.SiteMapProvider">
            <summary>
            Gets or sets the name of the site map provider that the control binds to.
            </summary>
        </member>
        <member name="P:Microsoft.Xrm.Portal.Web.UI.WebControls.CrmSiteMapChildView.StartFromCurrentNode">
            <summary>
            Gets or sets a value indicating whether the control will use the current site map node as the starting point for data retrieval.
            </summary>
            <remarks>
            Unless a <see cref="P:Microsoft.Xrm.Portal.Web.UI.WebControls.CrmSiteMapChildView.StartingNodeUrl"/> is provided, this value default to true.
            </remarks>
        </member>
        <member name="P:Microsoft.Xrm.Portal.Web.UI.WebControls.CrmSiteMapChildView.StartingNodeOffset">
            <summary>
            Gets or sets a negative integer offset from the staring node that determines the root node whose child nodes will be bound.
            </summary>
            <remarks>
            This control only supports negative offets--values greater than 0 are not supported.
            </remarks>
        </member>
        <member name="P:Microsoft.Xrm.Portal.Web.UI.WebControls.CrmSiteMapChildView.StartingNodeUrl">
            <summary>
            Gets or sets the URL of the staring node that determines the root node whose child nodes will be bound.
            </summary>
        </member>
        <member name="P:Microsoft.Xrm.Portal.Web.UI.WebControls.CrmSiteMapChildView.PortalName">
            <summary>
            Gets or sets the name of the portal configuration that the control binds to.
            </summary>
        </member>
        <member name="P:Microsoft.Xrm.Portal.Web.UI.WebControls.CrmSiteMapChildView.HasEditPermission">
            <summary>
            Gets a Boolean indicating whether or not the current user has Change permission for the entity
            associated with the starting site map node of this control.
            </summary>
        </member>
        <member name="P:Microsoft.Xrm.Portal.Web.UI.WebControls.CrmEntityDataSource.DataItem">
            <summary>
            Gets or sets the entity data item to which this control will bind.
            </summary>
        </member>
        <member name="T:Microsoft.Xrm.Portal.PortalContextExtensions">
            <summary>
            Helper methods on the <see cref="T:Microsoft.Xrm.Portal.IPortalContext"/>.
            </summary>
        </member>
        <member name="M:Microsoft.Xrm.Portal.PortalContextExtensions.GetTimeZone(Microsoft.Xrm.Portal.IPortalContext)">
            <summary>
            Returns the timezone for the website.
            </summary>
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="T:Microsoft.Xrm.Portal.Configuration.PortalContextInstanceMode">
            <summary>
            The modes in which the <see cref="T:Microsoft.Xrm.Portal.Configuration.PortalCrmConfigurationManager"/> instantiates <see cref="T:Microsoft.Xrm.Portal.IPortalContext"/> objects.
            </summary>
        </member>
        <member name="F:Microsoft.Xrm.Portal.Configuration.PortalContextInstanceMode.PerRequest">
            <summary>
            Create an instance for each web request.
            </summary>
        </member>
        <member name="F:Microsoft.Xrm.Portal.Configuration.PortalContextInstanceMode.PerInstance">
            <summary>
            Create an instance on every invocation.
            </summary>
        </member>
        <member name="T:Microsoft.Xrm.Portal.Configuration.PortalContextElement">
            <summary>
            The configuration settings for <see cref="T:Microsoft.Xrm.Portal.IPortalContext"/> dependencies.
            </summary>
            <remarks>
            For an example of the configuration format refer to the <see cref="T:Microsoft.Xrm.Portal.Configuration.PortalCrmConfigurationManager"/>.
            </remarks>
            <seealso cref="T:Microsoft.Xrm.Portal.Configuration.PortalCrmConfigurationManager"/>
        </member>
        <member name="F:Microsoft.Xrm.Portal.Configuration.PortalContextElement.DefaultXrmFilesBaseUri">
            <summary>
            Default virtual path prefix of embedded virtual files.
            </summary>
        </member>
        <member name="M:Microsoft.Xrm.Portal.Configuration.PortalContextElement.CreatePortalContext(System.Web.Routing.RequestContext)">
            <summary>
            Creates a <see cref="T:Microsoft.Xrm.Portal.IPortalContext"/> object.
            </summary>
            <param name="request"></param>
            <returns></returns>
        </member>
        <member name="P:Microsoft.Xrm.Portal.Configuration.PortalContextElement.Name">
            <summary>
            Gets or sets the element name.
            </summary>
        </member>
        <member name="P:Microsoft.Xrm.Portal.Configuration.PortalContextElement.Type">
            <summary>
            The dependency type name.
            </summary>
        </member>
        <member name="P:Microsoft.Xrm.Portal.Configuration.PortalContextElement.ContextName">
            <summary>
            The name of the nested <see cref="T:Microsoft.Xrm.Sdk.Client.OrganizationServiceContext"/> configuration.
            </summary>
        </member>
        <member name="P:Microsoft.Xrm.Portal.Configuration.PortalContextElement.CmsServiceBaseUri">
            <summary>
            The path of the OData service endpoint.
            </summary>
        </member>
        <member name="P:Microsoft.Xrm.Portal.Configuration.PortalContextElement.InstanceMode">
            <summary>
            The instance mode.
            </summary>
        </member>
        <member name="P:Microsoft.Xrm.Portal.Configuration.PortalContextElement.WebsiteSelector">
            <summary>
            The configuration of the <see cref="T:Microsoft.Xrm.Portal.Cms.WebsiteSelectors.IWebsiteSelector"/>. provider.
            </summary>
        </member>
        <member name="P:Microsoft.Xrm.Portal.Configuration.PortalContextElement.CrmEntitySecurityProvider">
            <summary>
            The configuration of the <see cref="T:Microsoft.Xrm.Client.Security.ICrmEntitySecurityProvider"/>.
            </summary>
        </member>
        <member name="P:Microsoft.Xrm.Portal.Configuration.PortalContextElement.DependencyProvider">
            <summary>
            The configuration of the <see cref="T:Microsoft.Xrm.Portal.Configuration.IDependencyProvider"/>.
            </summary>
        </member>
        <member name="T:Microsoft.Xrm.Portal.Configuration.IDependencyProvider">
            <summary>
            An inteface for retrieving dependency objects.
            </summary>
        </member>
        <member name="M:Microsoft.Xrm.Portal.Configuration.IDependencyProvider.GetDependency``1">
            <summary>
            Retrieves a dependency by type.
            </summary>
            <typeparam name="T"></typeparam>
            <returns></returns>
        </member>
        <member name="M:Microsoft.Xrm.Portal.Configuration.IDependencyProvider.GetDependency``1(System.String)">
            <summary>
            Retrieves a dependency by type and name.
            </summary>
            <typeparam name="T"></typeparam>
            <param name="name"></param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.Xrm.Portal.Web.WebsitePathUtility.ToAbsolute(Microsoft.Xrm.Sdk.Entity,System.String)">
            <summary>
            Converts the given URL path into a website specific path.
            </summary>
        </member>
        <member name="M:Microsoft.Xrm.Portal.Web.WebsitePathUtility.ToRelative(Microsoft.Xrm.Sdk.Entity,System.String)">
            <summary>
            Removes the website's path from the given URL path.
            </summary>
        </member>
        <member name="M:Microsoft.Xrm.Portal.Web.WebsitePathUtility.ToRelative(Microsoft.Xrm.Sdk.Entity,Microsoft.Xrm.Portal.Web.UrlBuilder)">
            <summary>
            Removes the website's path from the given URL.
            </summary>
        </member>
        <member name="T:Microsoft.Xrm.Portal.Web.UrlBuilder">
            <summary>
            Builds out a url.
            </summary>
        </member>
        <member name="M:Microsoft.Xrm.Portal.Web.UrlBuilder.ValidateUri(System.String)">
            <summary>
            Prepares a raw string URL to be valid for the base UriBuilder contstructor.
            </summary>
            <param name="uri"></param>
            <returns></returns>
        </member>
        <member name="P:Microsoft.Xrm.Portal.Web.UrlBuilder.PageName">
            <summary>
            The name of the aspx page.
            </summary>
        </member>
        <member name="T:Microsoft.Xrm.Portal.Web.Security.CrmContactRoleProvider">
            <summary>
            A <see cref="T:Microsoft.Xrm.Portal.Web.Security.CrmRoleProvider"/> that validates 'contact' entities (users) against 'adx_webrole' entitles (roles).
            </summary>
            <remarks>
            Configuration format.
            <code>
            <![CDATA[
            <configuration>
            
             <system.web>
              <roleManager enabled="true" defaultProvider="Xrm">
               <providers>
                <add
                 name="Xrm"
                 type="Microsoft.Xrm.Portal.Web.Security.CrmContactRoleProvider"
                 portalName="Xrm" [Microsoft.Xrm.Portal.Configuration.PortalContextElement]
                 attributeMapIsAuthenticatedUsersRole="adx_authenticatedusersrole"
                 attributeMapRoleName="adx_name"
                 attributeMapRoleWebsiteId="adx_websiteid"
                 attributeMapUsername="adx_username"
                 roleEntityName="adx_webrole"
                 roleToUserRelationshipName="adx_webrole_contact"
                 userEntityName="contact"
                />
               </providers>
              </roleManager>
             </system.web>
             
            </configuration>
            ]]>
            </code>
            </remarks>
            <seealso cref="T:Microsoft.Xrm.Portal.Configuration.PortalContextElement"/>
            <seealso cref="T:Microsoft.Xrm.Portal.Configuration.PortalCrmConfigurationManager"/>
            <seealso cref="T:Microsoft.Xrm.Client.Configuration.CrmConfigurationManager"/>
        </member>
        <member name="T:Microsoft.Xrm.Portal.Web.Security.CrmRoleProvider">
            <summary>
            A base role provider that validates an arbitary user entity with an abitrary role entity.
            </summary>
            <remarks>
            Configuration format.
            <code>
            <![CDATA[
            <configuration>
            
             <system.web>
              <roleManager enabled="true" defaultProvider="Xrm">
               <providers>
                <add
                 name="Xrm"
                 type="Microsoft.Xrm.Portal.Web.Security.CrmRoleProvider"
                 portalName="Xrm" [Microsoft.Xrm.Portal.Configuration.PortalContextElement]
                 attributeMapRoleName="" [Required]
                 attributeMapRoleWebsiteId="" [Required]
                 attributeMapUsername="" [Required]
                 roleEntityName="" [Required]
                 roleToUserRelationshipName="" [Required]
                 userEntityName="" [Required]
                />
               </providers>
              </roleManager>
             </system.web>
             
            </configuration>
            ]]>
            </code>
            </remarks>
            <seealso cref="T:Microsoft.Xrm.Portal.Web.Security.CrmContactRoleProvider"/>
            <seealso cref="T:Microsoft.Xrm.Portal.Configuration.PortalContextElement"/>
            <seealso cref="T:Microsoft.Xrm.Portal.Configuration.PortalCrmConfigurationManager"/>
            <seealso cref="T:Microsoft.Xrm.Client.Configuration.CrmConfigurationManager"/>
        </member>
        <member name="M:Microsoft.Xrm.Portal.Web.Security.CrmRoleProvider.Initialize(System.String,System.Collections.Specialized.NameValueCollection)">
            <summary>
            Initializes the provider with the property values specified in the ASP.NET application's configuration file.
            </summary>
        </member>
        <member name="M:Microsoft.Xrm.Portal.Web.Security.CrmRoleProvider.AddUsersToRoles(System.String[],System.String[])">
            <summary>
            Adds the specified user names to the specified roles for the configured applicationName.
            </summary>
            <param name="roleNames">A string array of the role names to add the specified user names to. </param>
            <param name="usernames">A string array of user names to be added to the specified roles. </param>
        </member>
        <member name="M:Microsoft.Xrm.Portal.Web.Security.CrmRoleProvider.CreateRole(System.String)">
            <summary>
            Adds a new role to the data source for the configured applicationName.
            </summary>
            <param name="roleName">The name of the role to create.</param>
        </member>
        <member name="M:Microsoft.Xrm.Portal.Web.Security.CrmRoleProvider.DeleteRole(System.String,System.Boolean)">
            <summary>
            Removes a role from the data source for the configured applicationName.
            </summary>
            <returns>
            True if the role was successfully deleted; otherwise, false.
            </returns>
            <param name="throwOnPopulatedRole">If true, then an exception will be thrown if the role has one or more members and the role will not be deleted.</param>
            <param name="roleName">The name of the role to delete.</param>
        </member>
        <member name="M:Microsoft.Xrm.Portal.Web.Security.CrmRoleProvider.FindUsersInRole(System.String,System.String)">
            <summary>
            Gets an array of user names in a role where the user name contains the specified user name to match.
            </summary>
            <returns>
            A string array containing the names of all the users where the user name matches usernameToMatch and the user is a member of the specified role.
            </returns>
            <param name="usernameToMatch">The user name to search for.</param>
            <param name="roleName">The role to search in.</param>
        </member>
        <member name="M:Microsoft.Xrm.Portal.Web.Security.CrmRoleProvider.GetAllRoles">
            <summary>
            Gets an array of all the roles for the configured applicationName.
            </summary>
            <returns>
            A string array containing the names of all the roles stored in the data source for the configured applicationName.
            </returns>
        </member>
        <member name="M:Microsoft.Xrm.Portal.Web.Security.CrmRoleProvider.GetRolesForUser(System.String)">
            <summary>
            Gets an array of the roles that a specified user is in for the configured applicationName.
            </summary>
            <returns>
            A string array containing the names of all the roles that the specified user is in for the configured applicationName.
            </returns>
            <param name="username">The user to return a list of roles for.</param>
        </member>
        <member name="M:Microsoft.Xrm.Portal.Web.Security.CrmRoleProvider.GetUsersInRole(System.String)">
            <summary>
            Gets an array of users in the specified role for the configured applicationName.
            </summary>
            <returns>
            A string array containing the names of all the users who are members of the specified role for the configured applicationName.
            </returns>
            <param name="roleName">The name of the role to get the list of users for. </param>
        </member>
        <member name="M:Microsoft.Xrm.Portal.Web.Security.CrmRoleProvider.IsUserInRole(System.String,System.String)">
            <summary>
            Gets a value indicating whether the specified user is in the specified role for the configured applicationName.
            </summary>
            <returns>
            True if the specified user is in the specified role for the configured applicationName; otherwise, false.
            </returns>
            <param name="username">The user name to search for.</param>
            <param name="roleName">The role to search in.</param>
        </member>
        <member name="M:Microsoft.Xrm.Portal.Web.Security.CrmRoleProvider.RemoveUsersFromRoles(System.String[],System.String[])">
            <summary>
            Removes the specified user names from the specified roles for the configured applicationName.
            </summary>
            <param name="roleNames">A string array of role names to remove the specified user names from. </param>
            <param name="usernames">A string array of user names to be removed from the specified roles. </param>
        </member>
        <member name="M:Microsoft.Xrm.Portal.Web.Security.CrmRoleProvider.RoleExists(System.String)">
            <summary>
            Gets a value indicating whether the specified role name already exists in the role data source for the configured applicationName.
            </summary>
            <returns>
            True if the role name already exists in the data source for the configured applicationName; otherwise, false.
            </returns>
            <param name="roleName">The name of the role to search for in the data source. </param>
        </member>
        <member name="M:Microsoft.Xrm.Portal.Web.Security.CrmRoleProvider.ForEachUserAndRole(Microsoft.Xrm.Sdk.Client.OrganizationServiceContext,System.String[],System.String[],System.Action{Microsoft.Xrm.Sdk.Entity,Microsoft.Xrm.Sdk.Entity})">
            <summary>
            Finds each user and role entity specified by the usernames and role names provided, respectively, and calls a delegate for each possible pairing.
            </summary>
            <exception cref="T:System.Configuration.Provider.ProviderException">
            Thrown if any of the specified users or roles are not found.
            </exception>
        </member>
        <member name="P:Microsoft.Xrm.Portal.Web.Security.CrmRoleProvider.ApplicationName">
            <summary>
            Gets or sets the name of the application to store and retrieve role information for.
            </summary>
            <returns>
            The name of the application to store and retrieve role information for.
            </returns>
        </member>
        <member name="P:Microsoft.Xrm.Portal.Web.Security.CrmRoleProvider.PortalName">
            <summary>
            The portal name to use to connect to Microsoft Dynamics CRM.
            </summary>
        </member>
        <member name="P:Microsoft.Xrm.Portal.Web.Security.CrmRoleProvider.WebsiteID">
            <summary>
            Gets the configured adx_website ID to which the operations of this provider are scoped.
            </summary>
        </member>
        <member name="T:Microsoft.Xrm.Portal.Web.SecurityCrmSiteMapNodeValidator">
            <summary>
            Validates that a given <see cref="T:Microsoft.Xrm.Client.Security.ICrmEntitySecurityProvider"/> grants <see cref="F:Microsoft.Xrm.Client.Security.CrmEntityRight.Read"/>
            privileges to the <see cref="T:Microsoft.Xrm.Client.CrmEntity"/> attached to any <see cref="T:Microsoft.Xrm.Portal.Web.CrmSiteMapNode"/> to be validated.
            </summary>
        </member>
        <member name="T:Microsoft.Xrm.Portal.Caching.ServiceBusCacheModule">
            <summary>
            A application module that hosts a <see cref="T:Microsoft.Xrm.Portal.Caching.CacheServiceBusServiceHost"/> for distributed cache invalidation requests over the AppFabric Service Bus.
            </summary>
            <remarks>
            When this module is enabled, the application begins listening on the service bus for cache invalidation requests sent from any source application that
            is running the <see cref="T:Microsoft.Xrm.Portal.Caching.ServiceBusObjectCache"/> cache provider or directly invoking the <see cref="T:Microsoft.Xrm.Portal.Caching.CacheServiceBusChannelFactory"/> (the client).
            
            This module requires that a <see cref="T:Microsoft.Xrm.Portal.Caching.ServiceBusObjectCache"/> be added to the cache configuration. The default object cache is used if it is of the
            type <see cref="T:Microsoft.Xrm.Portal.Caching.ServiceBusObjectCache"/>; otherwise, the first ServiceBusObjectCache in the collection of added <see cref="T:System.Runtime.Caching.ObjectCache"/> objects is used.
            <example>
            Standard configuration where each application acts as a host and a client.
            <code>
            <![CDATA[
            <configuration>
            
             <configSections>
              <section name="microsoft.xrm.client" type="Microsoft.Xrm.Client.Configuration.CrmSection, Microsoft.Xrm.Client"/>
             </configSections>
            
             <system.webServer>
              <modules runAllManagedModulesForAllRequests="true">
               <add name="ServiceBus" type="Microsoft.Xrm.Portal.Caching.ServiceBusCacheModule, Microsoft.Xrm.Portal" preCondition="managedHandler"/>
              </modules>
             </system.webServer>
             
             <microsoft.xrm.client>
              <objectCache default="ServiceBus">
               <add name="ServiceBus" type="Microsoft.Xrm.Portal.Caching.ServiceBusObjectCache, Microsoft.Xrm.Portal" connectionStringName="ServiceBus"/>
              </objectCache>
             </microsoft.xrm.client>
             
            </configuration>
            ]]>
            </code>
            </example>
            This module is one approach to hosting a <see cref="T:Microsoft.Xrm.Portal.Caching.CacheServiceBusServiceHost"/>. For alternative hosting options refer to <see cref="T:Microsoft.Xrm.Portal.Caching.CacheServiceBusServiceHostFactory"/>.
            </remarks>
            <seealso cref="T:Microsoft.Xrm.Portal.Caching.ServiceBusObjectCache"/>
            <seealso cref="T:Microsoft.Xrm.Portal.Caching.CacheServiceBusServiceHostFactory"/>
        </member>
        <member name="M:Microsoft.Xrm.Portal.Caching.ServiceBusCacheModule.Close">
            <summary>
            Closes the <see cref="T:Microsoft.Xrm.Portal.Caching.CacheServiceBusServiceHost"/>.
            </summary>
        </member>
        <member name="T:Microsoft.Xrm.Portal.Web.UI.WebControls.WebLinkHyperLink">
            <summary>
            Renders a hyperlink for a given adx_weblink entity.
            </summary>
        </member>
        <member name="P:Microsoft.Xrm.Portal.Web.UI.WebControls.WebLinkHyperLink.CurrentSiteMapNodeCssClass">
            <summary>
            Gets or sets a CSS class value to be added to the hyperlink if the target node of
            the hyperlink is the current site map node.
            </summary>
        </member>
        <member name="P:Microsoft.Xrm.Portal.Web.UI.WebControls.WebLinkHyperLink.ParentOfCurrentSiteMapNodeCssClass">
            <summary>
            Gets or sets a CSS class value to be added to the hyperlink if the current site map
            node is a descendant of the target node of the hyperlink.
            </summary>
        </member>
        <member name="P:Microsoft.Xrm.Portal.Web.UI.WebControls.WebLinkHyperLink.ShowImage">
            <summary>
            Gets or sets a Boolean indicating whether or not this hyperlink should render an image
            link, if an image is associated with the given adx_weblink.
            </summary>
        </member>
        <member name="P:Microsoft.Xrm.Portal.Web.UI.WebControls.WebLinkHyperLink.WebLink">
            <summary>
            Gets or sets the adx_weblink entity for which a corresponding hyperlink will be rendered.
            </summary>
        </member>
        <member name="T:Microsoft.Xrm.Portal.Web.UI.WebControls.LiveIdLoginStatus">
            <summary>
            The LiveIdLoginStatus control displays a login link for users who are not authenticated and a logout link for users who are authenticated.
            When anonymous, the link takes the user to Windows Live or optionally (using LoginNavigateUrl) to a specified landing page that lets the user know they're going to Windows Live.
            When authenticated, the logout link resets the current user's identity to be an anonymous user.
            </summary>
            <remarks>
            When a LoginNavigateUrl is not specified, the link takes the user directly to Windows Live.
            
            If a landing page is desired, set the LoginNavigateUrl to be your landing page, and then place this control on your landing page with no LoginNavigateUrl.
            
            The application ID and secret key from your Live ID site registration must be provided in the connection string the <see cref="T:Microsoft.Xrm.Portal.Web.Security.LiveIdMembershipProvider"/> uses.
            See the example below for the connection string syntax.
            
            If you wish to provide a logout page URL, it must be provided in the connection string the <see cref="T:Microsoft.Xrm.Portal.Web.Security.LiveIdMembershipProvider"/> uses.
            See the example below for the connection string syntax.
            
            When returning from sign-in, if the user is authenticated but has never registered, they can be sent to a specified RegistrationUrl.
            If no RegistrationUrl is given, the user can be automatically registered if the Auto Register connection string setting is true.
            If there is no RegistrationUrl, and automatic registration is disabled, the user will be signed out.
            
            <example>
            <![CDATA[
            <connectionStrings>
            	<add name="LiveId" connectionString="Application Id=???; Secret=???; Signed Out Url=???; Auto Register=true"/>
            </connectionStrings>
            ]]>
            The Signed Out Url and Auto Register settings are optional.
            </example>
            
            The return URL for your Live ID site registration should be the url to the LiveIdWebAuthenticationHandler that must be specified in the web.config.
            </remarks>
        </member>
        <member name="P:Microsoft.Xrm.Portal.Web.UI.WebControls.LiveIdLoginStatus.LoginDestinationUrl">
            <summary>
            When returning from sign-in, if the user is authenticated and registered, they will be sent to the specified URL.
            </summary>
        </member>
        <member name="P:Microsoft.Xrm.Portal.Web.UI.WebControls.LiveIdLoginStatus.LoginImageUrl">
            <summary>
            Gets or sets the URL of the image used for the login link.
            </summary>
        </member>
        <member name="P:Microsoft.Xrm.Portal.Web.UI.WebControls.LiveIdLoginStatus.LoginText">
            <summary>
            Gets or sets the text used for the login link.
            </summary>
        </member>
        <member name="P:Microsoft.Xrm.Portal.Web.UI.WebControls.LiveIdLoginStatus.LogoutImageUrl">
            <summary>
            Gets or sets the URL of the image used for the logout button.
            </summary>
        </member>
        <member name="P:Microsoft.Xrm.Portal.Web.UI.WebControls.LiveIdLoginStatus.LogoutText">
            <summary>
            Gets or sets the text used for the logout link.
            </summary>
        </member>
        <member name="P:Microsoft.Xrm.Portal.Web.UI.WebControls.LiveIdLoginStatus.LoginNavigateUrl">
            <summary>
            When a LoginNavigateUrl is not specified, the link takes the user directly to Windows Live.
            
            If a landing page is desired, set the LoginNavigateUrl to be your landing page, and then place this control on your landing page with no LoginNavigateUrl.
            </summary>
        </member>
        <member name="P:Microsoft.Xrm.Portal.Web.UI.WebControls.LiveIdLoginStatus.RegistrationUrl">
            <summary>
            When returning from sign-in, if the user is authenticated but has never registered, they will be sent to the specified URL.
            The URL must be one that exists that the server can POST to. It cannot be a custom URL or one that will cause a 404 redirect.
            </summary>
            <remarks>If no registration URL is given, the user can be automatically registered if one sets the AutoRegister connection string setting to true.</remarks>
        </member>
        <member name="T:Microsoft.Xrm.Portal.Web.UI.WebControls.CrmDataSourceView">
            <summary>
            Supports the <see cref="T:Microsoft.Xrm.Portal.Web.UI.WebControls.CrmDataSource"/> control and provides an interface for data-bound controls to retrieve data from the <see cref="!:CrmService"/>.
            </summary>
        </member>
        <member name="M:Microsoft.Xrm.Portal.Web.UI.WebControls.CrmDataSourceView.Delete(System.Collections.IDictionary,System.Collections.IDictionary)">
            <summary>
            Deletes an entity.
            </summary>
            <param name="keys">The keys by which to find the entity to be deleted. "ID" and "Name" must be specified.</param>
            <param name="oldValues">The entity properties before the update. Key: Property name e.g. "firstname" Value: Value of the property e.g. "Jane"</param>
            <returns>1 if successful; otherwise, 0.</returns>
        </member>
        <member name="M:Microsoft.Xrm.Portal.Web.UI.WebControls.CrmDataSourceView.Insert(System.Collections.IDictionary,System.String)">
            <summary>
            Creates a new entity.
            </summary>
            <param name="values">The entity properties. Key: Property name e.g. "firstname" Value: Value of the property e.g. "Jane"</param>
            <param name="entityName">The type of entity to create e.g. "contact"</param>
            <returns>1 if successful; otherwise, 0.</returns>
        </member>
        <member name="M:Microsoft.Xrm.Portal.Web.UI.WebControls.CrmDataSourceView.Update(System.Collections.IDictionary,System.Collections.IDictionary,System.Collections.IDictionary)">
            <summary>
            Updates an entity.
            </summary>
            <param name="keys">The keys by which to find the entity to be updated. "ID" and "Name" must be specified.</param>
            <param name="values">The entity properties to update. Key: Property name e.g. "firstname" Value: Value of the property e.g. "Jane"</param>
            <param name="oldValues">The entity properties before the update.</param>
            <returns>1 if successful; otherwise, 0.</returns>
        </member>
        <member name="T:Microsoft.Xrm.Portal.Web.Compilation.SnippetExpressionBuilder">
            <summary>
            Expression builder for retrieving snippet content for the current portal.
            </summary>
            <remarks>
            <example>
            Configuration.
            <code>
            <![CDATA[
            <configuration>
            
             <system.web>
              <compilation>
               <expressionBuilders>
                <add expressionPrefix="Snippet" type="Microsoft.Xrm.Portal.Web.Compilation.SnippetExpressionBuilder, Microsoft.Xrm.Portal"/>
               </expressionBuilders>
              </compilation>
             
            </configuration>
            ]]>
            </code>
            Usage in ASPX page.
            <code>
            <![CDATA[
            <asp:Label runat="server" Text='<%$ Snippet: Name={snippet name} [, Default={default text}] [, Format={format string}] [, Portal={portal name}] %>'/>
            <asp:Label runat="server" Text='<%$ Snippet: Name=Profile, Format=-{0}-, Default=My Profile %>'/>
            ]]>
            </code>
            </example>
            </remarks>
        </member>
        <member name="T:Microsoft.Xrm.Portal.ServiceBus.ServiceBusServiceHostFactory`2">
            <summary>
            A <see cref="T:System.ServiceModel.Activation.ServiceHostFactory"/> for a <see cref="T:Microsoft.Xrm.Portal.ServiceBus.ServiceBusServiceHost`2"/>.
            </summary>
            <typeparam name="TContract"></typeparam>
            <typeparam name="TService"></typeparam>
        </member>
        <member name="P:Microsoft.Xrm.Portal.ServiceBus.ServiceBusServiceHostFactory`2.Connection">
            <summary>
            The connection details.
            </summary>
        </member>
        <member name="M:Microsoft.Xrm.Portal.Reflection.MemberInfoExtensions.GetCustomAttributes``1(System.Reflection.MemberInfo)">
            <summary>
            Returns a collection of custom attributes for a given member.
            </summary>
            <param name="info"></param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.Xrm.Portal.Reflection.MemberInfoExtensions.GetFirstOrDefaultCustomAttribute``1(System.Reflection.MemberInfo)">
            <summary>
            Returns the first custom attribute of a given member.
            </summary>
            <param name="info"></param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.Xrm.Portal.Reflection.MemberInfoExtensions.ContainsCustomAttribute(System.Reflection.MemberInfo,System.Type)">
            <summary>
            Determines if the member is annotated by a given <see cref="T:System.Attribute"></see>.
            </summary>
            <param name="info"></param>
            <param name="customAttributeType"></param>
            <returns></returns>
        </member>
        <member name="T:Microsoft.Xrm.Portal.Web.UI.WebControls.SiteEditingManager">
            <summary>
            Coordinates loading of script dependencies for controls that request XRM inline editing support.
            </summary>
        </member>
        <member name="P:Microsoft.Xrm.Portal.Web.UI.WebControls.SiteEditingManager.DependencyScripts">
            <summary>
            Gets a collection of framework dependency <see cref="T:System.Web.UI.ScriptReference">script references</see> to be loaded prior
            to the XRM inline editing scripts.
            </summary>
            <remarks>
            These scripts will only be loaded if XRM inline editing support is requested by another control on the page.
            </remarks>
        </member>
        <member name="P:Microsoft.Xrm.Portal.Web.UI.WebControls.SiteEditingManager.DependencyStyles">
            <summary>
            Gets a collection of <see cref="T:Microsoft.Xrm.Portal.Web.UI.WebControls.StyleReference">style references</see> to be linked by the page if XRM inline
            editing support is request by a control on the page.
            </summary>
            <remarks>
            These styles will be loaded prior to any styles included by the framework.
            </remarks>
        </member>
        <member name="P:Microsoft.Xrm.Portal.Web.UI.WebControls.SiteEditingManager.ExtensionScripts">
            <summary>
            Gets a collection of <see cref="T:System.Web.UI.ScriptReference">script references</see> to be loaded after the XRM inline
            editing scripts.
            </summary>
            <remarks>
            These scripts will only be loaded if XRM inline editing support is requested by another control on the page.
            </remarks>
        </member>
        <member name="P:Microsoft.Xrm.Portal.Web.UI.WebControls.SiteEditingManager.ExtensionStyles">
            <summary>
            Gets a collection of <see cref="T:Microsoft.Xrm.Portal.Web.UI.WebControls.StyleReference">style references</see> to be linked by the page if XRM inline
            editing support is request by a control on the page.
            </summary>
            <remarks>
            These styles will be loaded after to any styles included by the framework.
            </remarks>
        </member>
        <member name="T:Microsoft.Xrm.Portal.Web.UI.WebControls.CrmEntityFormView">
            <summary>
            Renders a form for a given entity name, using CRM metadata.
            </summary>
            <remarks>
            <para>
            This control currently only supports insertion (no updates, etc.), and should generally use
            a <see cref="T:Microsoft.Xrm.Portal.Web.UI.WebControls.CrmDataSource"/> for its data source.
            </para>
            <para>
            This control currently supports the following field types: single-line text (with required
            field validation), multi-line text (with required field validation), picklists, boolean
            (i.e., checkboxes), datetime (supports date-only fields), integer (with required field
            and range validation), and money (with required field and range validation).
            </para>
            <para>
            Other field types (e.g., lookups) will not be rendered.
            </para>
            </remarks>
        </member>
        <member name="M:Microsoft.Xrm.Portal.Web.UI.WebControls.CrmEntityFormView.InsertItem">
            <summary>
             Trigger the insertion of the form view
            </summary>
        </member>
        <member name="M:Microsoft.Xrm.Portal.Web.UI.WebControls.CacheParameters.GetExpiration">
            <summary>
            Retrieves the absolute expiration or the duration expiration.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Microsoft.Xrm.Portal.Web.Handlers.LiveIdWebAuthenticationHandler.ProcessRequest(System.Web.HttpContext)">
            <summary>
            Enables processing of HTTP Web requests by a custom HttpHandler that implements the <see cref="T:System.Web.IHttpHandler" /> interface.
            </summary>
            <param name="context">An <see cref="T:System.Web.HttpContext" /> object that provides references to the intrinsic server objects (for example, Request, Response, Session, and Server) used to service HTTP requests. </param>
        </member>
        <member name="M:Microsoft.Xrm.Portal.Web.Handlers.LiveIdWebAuthenticationHandler.ProcessLogin(System.Web.HttpContext)">
            <summary>
            Set the Live ID cookie and redirect to the login destination or the registration destination.
            </summary>
        </member>
        <member name="P:Microsoft.Xrm.Portal.Web.Handlers.LiveIdWebAuthenticationHandler.IsReusable">
            <summary>
            Gets a value indicating whether another request can use the <see cref="T:System.Web.IHttpHandler" /> instance.
            </summary>
            <returns>
            true if the <see cref="T:System.Web.IHttpHandler" /> instance is reusable; otherwise, false.
            </returns>
        </member>
        <member name="T:Microsoft.Xrm.Portal.Web.Compilation.TimeZoneExpressionBuilder">
            <summary>
            Expression builder for retrieving the timezone for the current portal.
            </summary>
            <remarks>
            <example>
            Configuration.
            <code>
            <![CDATA[
            <configuration>
            
             <system.web>
              <compilation>
               <expressionBuilders>
                <add expressionPrefix="TimeZone" type="Microsoft.Xrm.Portal.Web.Compilation.TimeZoneExpressionBuilder, Microsoft.Xrm.Portal"/>
               </expressionBuilders>
              </compilation>
             
            </configuration>
            ]]>
            </code>
            Usage in ASPX page.
            <code>
            <![CDATA[
            <asp:Label runat="server" Text='<%$ TimeZone: [Name=(id|displayname)] [, Eval={expression}] [, Format={format string}] [, Portal={portal name}] %>'/>
            <asp:Label runat="server" Text='<%$ TimeZone: Eval=DisplayName, Format=-{0}- %>'/>
            <asp:Label runat="server" Text='<%$ TimeZone: Eval=Id, Format=-{0}- %>'/>
            ]]>
            </code>
            </example>
            </remarks>
        </member>
        <member name="T:Microsoft.Xrm.Portal.Web.Compilation.CrmSiteMapExpressionBuilder">
            <summary>
            Expression builder for getting various values from the <see cref="T:Microsoft.Xrm.Portal.Web.CrmSiteMapProvider"/>, given
            one of several supported node selectors.
            </summary>
            <remarks>
            <example>
            Configuration.
            <code>
            <![CDATA[
            <configuration>
            
             <system.web>
              <compilation>
               <expressionBuilders>
                <add expressionPrefix="CrmSiteMap" type="Microsoft.Xrm.Portal.Web.Compilation.CrmSiteMapExpressionBuilder, Microsoft.Xrm.Portal"/>
               </expressionBuilders>
              </compilation>
             
            </configuration>
            ]]>
            </code>
            Usage in ASPX page.
            <code>
            <![CDATA[
            <asp:Label runat="server" Text='<%$ CrmSiteMap: (Current|SiteMarker={siteMarker}) [, Return={Node|Entity|Url}] [, Eval={expression}] [, Format={format string}] [, Portal={portal name}] %>'/>
            <asp:Label runat="server" Text='<%$ CrmSiteMap: Current, Eval=Entity %>'/>
            <asp:Label runat="server" Text='<%$ CrmSiteMap: SiteMarker=Profile, Eval=Url, Format=-{0}- %>'/>
            ]]>
            </code>
            </example>
            </remarks>
        </member>
        <member name="T:Microsoft.Xrm.Portal.Cms.WebsiteSelectors.NameWebsiteSelector">
            <summary>
            Selects website based on a website's name.
            </summary>
            <remarks>
            The website name is retrieved from the <see cref="T:Microsoft.Xrm.Portal.Configuration.PortalContextElement"/> by specifying the "websiteName" attribute.
            See <see cref="T:Microsoft.Xrm.Portal.Configuration.PortalCrmConfigurationManager"/> for an example.
            </remarks>
        </member>
        <member name="M:Microsoft.Xrm.Portal.Cms.WebsiteSelectors.NameWebsiteSelector.Initialize(System.String,System.Collections.Specialized.NameValueCollection)">
            <summary>
            Initializes custom settings.
            </summary>
            <param name="name"></param>
            <param name="config"></param>
        </member>
        <member name="M:Microsoft.Xrm.Portal.Cms.WebsiteSelectors.NameWebsiteSelector.GetWebsite(Microsoft.Xrm.Sdk.Client.OrganizationServiceContext,System.Web.Routing.RequestContext)">
            <summary>
            Selects website based on a website's name.
            </summary>
            <remarks>If more than one website matches, the first match is returned.</remarks>
            <exception cref="T:System.ApplicationException">thrown if a website match cannot be found</exception> 
        </member>
        <member name="P:Microsoft.Xrm.Portal.Cms.WebsiteSelectors.NameWebsiteSelector.PortalName">
            <summary>
            The name of the <see cref="T:Microsoft.Xrm.Portal.Configuration.PortalContextElement"/> where the website name is specified.
            </summary>
        </member>
        <member name="P:Microsoft.Xrm.Portal.Cms.WebsiteSelectors.NameWebsiteSelector.ConfiguredWebsiteName">
            <summary>
            Gets the value of the configured website name.
            </summary>
            <exception cref="T:System.Configuration.ConfigurationErrorsException">thrown if the app setting value is not found</exception>
        </member>
        <member name="T:Microsoft.Xrm.Portal.Web.QueryStringCollection">
            <summary>
            Loads the current querystring when instantiated and can output a flat formatted string.
            </summary>
        </member>
        <member name="M:Microsoft.Xrm.Portal.Web.QueryStringCollection.#ctor(System.String)">
            <summary>
            Parses a string querystring representation.
            </summary>
            <param name="url"></param>
        </member>
        <member name="M:Microsoft.Xrm.Portal.Web.QueryStringCollection.ToString">
            <summary>
            Returns a formatted querystring.
            </summary>
            <returns></returns>
        </member>
        <member name="T:Microsoft.Xrm.Portal.Web.Routing.CompositeEmbeddedResourceRouteHandler">
            <summary>
            Serves multiple embedded resources in a single response.
            </summary>
            <remarks>
            This handler concatenates the contents of separate embedded resources into a single response.
            </remarks>
            <seealso cref="T:Microsoft.Xrm.Portal.Web.Modules.PortalRoutingModule"/>
            <seealso cref="T:Microsoft.Xrm.Portal.Web.Handlers.EmbeddedResourceHttpHandler"/>
        </member>
        <member name="T:Microsoft.Xrm.Portal.Web.Routing.IEmbeddedResourceRouteHandler">
            <summary>
            Handles routes involving access to embedded resources.
            </summary>
        </member>
        <member name="P:Microsoft.Xrm.Portal.Web.Routing.IEmbeddedResourceRouteHandler.Mappings">
            <summary>
            Description of the available embedded resource assemblies.
            </summary>
        </member>
        <member name="M:Microsoft.Xrm.Portal.Web.Routing.CompositeEmbeddedResourceRouteHandler.#ctor(System.Collections.Generic.IEnumerable{Microsoft.Xrm.Portal.Web.EmbeddedResourceAssemblyAttribute},System.String[])">
            <summary>
            Constructor.
            </summary>
            <param name="mappings">The embedded resource assembly descriptions.</param>
            <param name="paths">The paths of the resources to serve.</param>
        </member>
        <member name="M:Microsoft.Xrm.Portal.Web.Routing.CompositeEmbeddedResourceRouteHandler.GetHttpHandler(System.Web.Routing.RequestContext)">
            <summary>
            Provides the object that processes the request.
            </summary>
            <param name="requestContext">An object that encapsulates information about the request.</param>
            <returns></returns>
        </member>
        <member name="P:Microsoft.Xrm.Portal.Web.Routing.CompositeEmbeddedResourceRouteHandler.Mappings">
            <summary>
            Description of the available embedded resource assemblies.
            </summary>
        </member>
        <member name="T:Microsoft.Xrm.Portal.Web.Data.Services.EntityExtensions">
            <summary>
            Extension methods for <see cref="T:Microsoft.Xrm.Sdk.Entity"/> for building <see cref="T:Microsoft.Xrm.Portal.Web.Data.Services.CmsDataService`1"/> service URIs.
            </summary>
        </member>
        <member name="T:Microsoft.Xrm.Portal.Web.ApplicationPath">
            <summary>
            Represents the various forms of virtual path values or an alternative external URL.
            </summary>
        </member>
        <member name="M:Microsoft.Xrm.Portal.Web.ApplicationPath.FromAppRelativePath(System.String)">
            <summary>
            Builds an <see cref="T:Microsoft.Xrm.Portal.Web.ApplicationPath"/> from an app-relative path.
            </summary>
        </member>
        <member name="M:Microsoft.Xrm.Portal.Web.ApplicationPath.FromPartialPath(System.String)">
            <summary>
            Builds an <see cref="T:Microsoft.Xrm.Portal.Web.ApplicationPath"/> from a partial app-relative path.
            </summary>
        </member>
        <member name="M:Microsoft.Xrm.Portal.Web.ApplicationPath.FromAbsolutePath(System.String)">
            <summary>
            Builds an <see cref="T:Microsoft.Xrm.Portal.Web.ApplicationPath"/> from an absolute path.
            </summary>
        </member>
        <member name="M:Microsoft.Xrm.Portal.Web.ApplicationPath.FromExternalUrl(System.String)">
            <summary>
            Builds an <see cref="T:Microsoft.Xrm.Portal.Web.ApplicationPath"/> from an external URL.
            </summary>
        </member>
        <member name="P:Microsoft.Xrm.Portal.Web.ApplicationPath.AppRelativePath">
            <summary>
            Gets the app-relative path with the leading '~' character.
            </summary>
        </member>
        <member name="P:Microsoft.Xrm.Portal.Web.ApplicationPath.PartialPath">
            <summary>
            Gets the app-relative path without the leading '~' character.
            </summary>
        </member>
        <member name="P:Microsoft.Xrm.Portal.Web.ApplicationPath.AbsolutePath">
            <summary>
            Gets the absolute application path.
            </summary>
        </member>
        <member name="P:Microsoft.Xrm.Portal.Web.ApplicationPath.ExternalUrl">
            <summary>
            Gets the external URL.
            </summary>
        </member>
        <member name="T:Microsoft.Xrm.Portal.Caching.CacheServiceBusServiceHostFactory">
            <summary>
            Factory that provides instances of <see cref="T:Microsoft.Xrm.Portal.Caching.CacheServiceBusServiceHost"/> in managed hosting environments where the host instance is created
            dynamically in response to incoming messages.
            </summary>
            <remarks>
            There are several options for hosting a <see cref="T:Microsoft.Xrm.Portal.Caching.CacheServiceBusServiceHost"/> depending on the environment and available features.
            <example>
            In order to host the <see cref="T:Microsoft.Xrm.Portal.Caching.CacheServiceBusServiceHost"/> in Windows Azure (to be able to receive cache invalidation requests), add the following
            class to the web role (note: this approach will only work when running under the Hosted Web Core).
            <code>
            <![CDATA[
            public class WebRole : RoleEntryPoint
            {
              private ServiceHost _host;
            
              public override bool OnStart()
              {
                var factory = new CacheServiceBusServiceHostFactory();
                _host = factory.CreateServiceHost();
                _host.Open();
            
                return base.OnStart();
              }
            
              public override void OnStop()
              {
                if (_host != null) _host.Close();
            
                base.OnStop();
              }
            }
            ]]>
            </code>
            
            If Azure Hosted Web Core is not available or in a standard IIS environment, hosting can be done through a service endpoint. Create a .svc file on the
            website with the following directive.
            <code>
            <![CDATA[
            <%@ ServiceHost Language="C#" Service="Microsoft.Xrm.Portal.Caching.ServiceBusCacheService" Factory="Microsoft.Xrm.Portal.Caching.CacheServiceBusServiceHostFactory, Microsoft.Xrm.Portal" Debug="true" %>
            ]]>
            </code>
            At this point a feature such as the IIS Application Warm-Up module or ASP.NET 4.0 Auto-start must be enabled to ensure that the service host is always
            available.
            </example>
            Another option for service hosting is to enable the <see cref="T:Microsoft.Xrm.Portal.Caching.ServiceBusCacheModule"/>.
            </remarks>
            <seealso cref="T:Microsoft.Xrm.Portal.Caching.ServiceBusObjectCache"/>
            <seealso cref="T:Microsoft.Xrm.Portal.Caching.ServiceBusCacheModule"/>
        </member>
        <member name="M:Microsoft.Xrm.Portal.Caching.CacheServiceBusServiceHostFactory.CreateServiceHost">
            <summary>
            Creates a <see cref="T:Microsoft.Xrm.Portal.Caching.CacheServiceBusServiceHost"/> based on the configured <see cref="T:Microsoft.Xrm.Portal.Caching.ServiceBusObjectCache"/>.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Microsoft.Xrm.Portal.Caching.CacheServiceBusServiceHostFactory.CreateServiceHost(Microsoft.Xrm.Portal.Caching.ServiceBusObjectCache)">
            <summary>
            Creates a <see cref="T:Microsoft.Xrm.Portal.Caching.CacheServiceBusServiceHost"/>.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Microsoft.Xrm.Portal.Caching.CacheServiceBusServiceHostFactory.CreateServiceHost(Microsoft.Xrm.Portal.Caching.ServiceBusObjectCache,System.Type,System.Uri[])">
            <summary>
            Creates a <see cref="T:Microsoft.Xrm.Portal.Caching.CacheServiceBusServiceHost"/>.
            </summary>
            <param name="cache"></param>
            <param name="serviceType"></param>
            <param name="baseAddresses"></param>
            <returns></returns>
        </member>
        <member name="T:Microsoft.Xrm.Portal.Web.EmbeddedResourceVirtualPathProvider">
            <summary>
            A path provider for serving static files from embedded resources of a registered assembly.
            </summary>
        </member>
        <member name="T:Microsoft.Xrm.Portal.Web.Compilation.WebsiteExpressionBuilder">
            <summary>
            Expression builder for retrieving the current website for the current portal.
            </summary>
            <remarks>
            This class is superseded by the <see cref="T:Microsoft.Xrm.Portal.Web.Compilation.PortalContextExpressionBuilder"/> class.
            <example>
            Configuration.
            <code>
            <![CDATA[
            <configuration>
            
             <system.web>
              <compilation>
               <expressionBuilders>
                <add expressionPrefix="Website" type="Microsoft.Xrm.Portal.Web.Compilation.WebsiteExpressionBuilder, Microsoft.Xrm.Portal"/>
               </expressionBuilders>
              </compilation>
             
            </configuration>
            ]]>
            </code>
            Usage in ASPX page.
            <code>
            <![CDATA[
            <asp:Label runat="server" Text='<%$ Website: (Current|Attribute={attribute name}) [, Eval={expression}] [, Format={format string}] [, Default={default text}] [, Portal={portal name}] %>'/>
            ]]>
            </code>
            </example>
            </remarks>
            <seealso cref="T:Microsoft.Xrm.Portal.Web.Compilation.PortalContextExpressionBuilder"/>
        </member>
        <member name="T:Microsoft.Xrm.Portal.Web.Compilation.CurrentContactExpressionBuilder">
            <summary>
            Expression builder for retrieving the current user for the current portal.
            </summary>
            <remarks>
            This class is superseded by the <see cref="T:Microsoft.Xrm.Portal.Web.Compilation.PortalContextExpressionBuilder"/> class.
            <example>
            Configuration.
            <code>
            <![CDATA[
            <configuration>
            
             <system.web>
              <compilation>
               <expressionBuilders>
                <add expressionPrefix="Contact" type="Microsoft.Xrm.Portal.Web.Compilation.CurrentContactExpressionBuilder, Microsoft.Xrm.Portal"/>
               </expressionBuilders>
              </compilation>
             
            </configuration>
            ]]>
            </code>
            Usage in ASPX page.
            <code>
            <![CDATA[
            <asp:Label runat="server" Text='<%$ Contact: (Current|Attribute={attribute name}) [, Eval={expression}] [, Format={format string}] [, Default={default text}] [, Portal={portal name}] %>'/>
            ]]>
            </code>
            </example>
            </remarks>
            <seealso cref="T:Microsoft.Xrm.Portal.Web.Compilation.PortalContextExpressionBuilder"/>
        </member>
        <member name="T:Microsoft.Xrm.Portal.Configuration.PortalCachePolicyElement">
            <summary>
            A group of <see cref="T:Microsoft.Xrm.Portal.Configuration.HttpCachePolicyElement"/> elements used globally by the portal.
            </summary>
        </member>
        <member name="P:Microsoft.Xrm.Portal.Configuration.PortalCachePolicyElement.EmbeddedResource">
            <summary>
            The settings in which the <see cref="T:System.Web.HttpCachePolicy"/> of the <see cref="T:System.Web.HttpResponse"/> will cache rendered embedded resources.
            </summary>
            <remarks>
            Used by the <see cref="T:Microsoft.Xrm.Portal.Web.Handlers.EmbeddedResourceHttpHandler"/> for setting response headers.
            </remarks>
        </member>
        <member name="P:Microsoft.Xrm.Portal.Configuration.PortalCachePolicyElement.Annotation">
            <summary>
            The settings in which the <see cref="T:System.Web.HttpCachePolicy"/> of the <see cref="T:System.Web.HttpResponse"/> will cache rendered annotations.
            </summary>
            <remarks>
            Used by the <see cref="T:Microsoft.Xrm.Portal.Web.Handlers.AnnotationHandler"/> for setting response headers.
            </remarks>
        </member>
        <member name="T:Microsoft.Xrm.Portal.Configuration.HttpCachePolicyElement">
            <summary>
            Configuration settings for specifying custom <see cref="T:System.Web.HttpCachePolicy"/> values.
            </summary>
        </member>
        <member name="P:Microsoft.Xrm.Portal.Configuration.HttpCachePolicyElement.CacheExtension">
            <summary>
            Appends the specified text to the Cache-Control HTTP header.
            </summary>
        </member>
        <member name="P:Microsoft.Xrm.Portal.Configuration.HttpCachePolicyElement.Cacheability">
            <summary>
            The 'Cache-Control' HTTP header value.
            </summary>
        </member>
        <member name="P:Microsoft.Xrm.Portal.Configuration.HttpCachePolicyElement.Expires">
            <summary>
            The 'Expires' HTTP header value in <see cref="T:System.DateTime"/> format.
            </summary>
        </member>
        <member name="P:Microsoft.Xrm.Portal.Configuration.HttpCachePolicyElement.MaxAge">
            <summary>
            The 'max-age' HTTP header value in <see cref="T:System.TimeSpan"/> format.
            </summary>
        </member>
        <member name="P:Microsoft.Xrm.Portal.Configuration.HttpCachePolicyElement.Revalidation">
            <summary>
            Sets the Cache-Control HTTP header to either the must-revalidate or the proxy-revalidate directives based on the supplied enumeration value.
            </summary>
        </member>
        <member name="P:Microsoft.Xrm.Portal.Configuration.HttpCachePolicyElement.SlidingExpiration">
            <summary>
            Sets cache expiration to from absolute to sliding.
            </summary>
        </member>
        <member name="P:Microsoft.Xrm.Portal.Configuration.HttpCachePolicyElement.ValidUntilExpires">
            <summary>
            Specifies whether the ASP.NET cache should ignore HTTP Cache-Control headers sent by the client that invalidate the cache.
            </summary>
        </member>
        <member name="P:Microsoft.Xrm.Portal.Configuration.HttpCachePolicyElement.VaryByCustom">
            <summary>
            Specifies a custom text string to vary cached output responses by.
            </summary>
        </member>
        <member name="P:Microsoft.Xrm.Portal.Configuration.HttpCachePolicyElement.VaryByContentEncodings">
            <summary>
            A semicolon-separated list of 'Content-Encoding' headers used to vary the output cache.
            </summary>
        </member>
        <member name="P:Microsoft.Xrm.Portal.Configuration.HttpCachePolicyElement.VaryByHeaders">
            <summary>
            A semicolon-separated list of HTTP headers used to vary the output cache.
            </summary>
        </member>
        <member name="P:Microsoft.Xrm.Portal.Configuration.HttpCachePolicyElement.VaryByParams">
            <summary>
            A semicolon-separated list of parameters received by an HTTP GET or HTTP POST used to vary the output cache.
            </summary>
        </member>
        <member name="M:Microsoft.Xrm.Portal.Cms.OrganizationServiceContextExtensions.GetVisibleChildPagesBySiteMarker(Microsoft.Xrm.Sdk.Client.OrganizationServiceContext,Microsoft.Xrm.Sdk.Entity,System.String)">
            <summary>
            Retrieves visible child Web Page entities for a given site-marker.
            </summary>
        </member>
        <member name="M:Microsoft.Xrm.Portal.Cms.OrganizationServiceContextExtensions.GetChildPages(Microsoft.Xrm.Sdk.Client.OrganizationServiceContext,Microsoft.Xrm.Sdk.Entity)">
            <summary>
            Retrieves the child pages of this page.
            </summary>
        </member>
        <member name="M:Microsoft.Xrm.Portal.Cms.OrganizationServiceContextExtensions.GetChildFiles(Microsoft.Xrm.Sdk.Client.OrganizationServiceContext,Microsoft.Xrm.Sdk.Entity)">
            <summary>
            Retrieves the child files of this page.
            </summary>
        </member>
        <member name="M:Microsoft.Xrm.Portal.Cms.OrganizationServiceContextExtensions.GetVisibleChildPages(Microsoft.Xrm.Sdk.Client.OrganizationServiceContext,Microsoft.Xrm.Sdk.Entity)">
            <summary>
            Retrieves the visible child pages of this page.
            </summary>
        </member>
        <member name="M:Microsoft.Xrm.Portal.Cms.OrganizationServiceContextExtensions.GetVisibleChildPagesForWebLink(Microsoft.Xrm.Sdk.Client.OrganizationServiceContext,Microsoft.Xrm.Sdk.Entity)">
            <summary>
            Retrieves a list of visible child pages for this web link.
            </summary>
        </member>
        <member name="M:Microsoft.Xrm.Portal.Cms.OrganizationServiceContextExtensions.GetNotes(Microsoft.Xrm.Sdk.Client.OrganizationServiceContext,Microsoft.Xrm.Sdk.Entity)">
            <summary>
            Retrieves the CRM notes that the file is uploaded to.
            </summary>
        </member>
        <member name="M:Microsoft.Xrm.Portal.Cms.OrganizationServiceContextExtensions.GetNote(Microsoft.Xrm.Sdk.Client.OrganizationServiceContext,Microsoft.Xrm.Sdk.Entity)">
            <summary>
            Retrieves the CRM note that the file is uploaded to.
            </summary>
        </member>
        <member name="T:Microsoft.Xrm.Portal.Caching.ServiceBusObjectCache">
            <summary>
            An <see cref="T:System.Runtime.Caching.ObjectCache"/> that distributes cache invalidation operations over the AppFabric Service Bus.
            </summary>
            <remarks>
            Cache item removal operations trigger a client call to the service bus. Any application that needs to recieve cache invaliation requests should add the
            necessary code to host the <see cref="T:Microsoft.Xrm.Portal.Caching.CacheServiceBusServiceHost"/>.
            <example>
            The following configuration enables the client portion of the AppFabric Service Bus cache invalidation feature.
            <code>
            <![CDATA[
            <configuration>
            
             <configSections>
              <section name="microsoft.xrm.client" type="Microsoft.Xrm.Client.Configuration.CrmSection, Microsoft.Xrm.Client"/>
             </configSections>
             
             <connectionStrings>
              <add name="ServiceBus" connectionString="Service Namespace=...; Service Path=...; Issuer Name=...; Issuer Secret=...; Include Exception Detail In Faults=true"/>
             </connectionStrings>
             
             <microsoft.xrm.client>
              <objectCache default="ServiceBus">
               <add name="ServiceBus" type="Microsoft.Xrm.Portal.Caching.ServiceBusObjectCache, Microsoft.Xrm.Portal" connectionStringName="ServiceBus"/>
              </objectCache>
             </microsoft.xrm.client>
             
            </configuration>
            ]]>
            </code>
            </example>
            For details on hosting the <see cref="T:Microsoft.Xrm.Portal.Caching.CacheServiceBusServiceHost"/> refer to <see cref="T:Microsoft.Xrm.Portal.Caching.CacheServiceBusServiceHostFactory"/>.
            </remarks>
            <seealso cref="T:Microsoft.Xrm.Portal.Caching.CacheServiceBusServiceHostFactory"/>
        </member>
        <member name="T:Microsoft.Xrm.Portal.Caching.CompositeObjectCache">
            <summary>
            A wrapper class containing a nested <see cref="T:System.Runtime.Caching.ObjectCache"/>.
            </summary>
        </member>
        <member name="M:Microsoft.Xrm.Portal.Caching.CompositeObjectCache.Initialize(System.String,System.Collections.Specialized.NameValueCollection)">
            <summary>
            Initializes custom settings.
            </summary>
            <param name="name"></param>
            <param name="config"></param>
        </member>
        <member name="M:Microsoft.Xrm.Portal.Caching.CompositeObjectCache.CreateCacheEntryChangeMonitor(System.Collections.Generic.IEnumerable{System.String},System.String)">
            <summary>
            When overridden in a derived class, creates a <see cref="T:System.Runtime.Caching.CacheEntryChangeMonitor"/> object that can trigger events in response to changes to specified cache entries. 
            </summary>
            <returns>
            A change monitor that monitors cache entries in the cache. 
            </returns>
            <param name="keys">The unique identifiers for cache entries to monitor. </param><param name="regionName">Optional. A named region in the cache where the cache keys in the <paramref name="keys"/> parameter exist, if regions are implemented. The default value for the optional parameter is null.</param>
        </member>
        <member name="M:Microsoft.Xrm.Portal.Caching.CompositeObjectCache.GetEnumerator">
            <summary>
            When overridden in a derived class, creates an enumerator that can be used to iterate through a collection of cache entries. 
            </summary>
            <returns>
            The enumerator object that provides access to the cache entries in the cache.
            </returns>
        </member>
        <member name="M:Microsoft.Xrm.Portal.Caching.CompositeObjectCache.Contains(System.String,System.String)">
            <summary>
            When overridden in a derived class, checks whether the cache entry already exists in the cache.
            </summary>
            <returns>
            true if the cache contains a cache entry with the same key value as <paramref name="key"/>; otherwise, false. 
            </returns>
            <param name="key">A unique identifier for the cache entry. </param><param name="regionName">Optional. A named region in the cache where the cache can be found, if regions are implemented. The default value for the optional parameter is null.</param>
        </member>
        <member name="M:Microsoft.Xrm.Portal.Caching.CompositeObjectCache.Add(System.Runtime.Caching.CacheItem,System.Runtime.Caching.CacheItemPolicy)">
            <summary>
            When overridden in a derived class, tries to insert a cache entry into the cache as a CacheItem instance, and adds details about how the entry should be evicted.
            </summary>
            <param name="item">The object to add.</param>
            <param name="policy">An object that contains eviction details for the cache entry. This object provides more options for eviction than a simple absolute expiration.</param>
            <returns>true if insertion succeeded, or false if there is an already an entry in the cache that has the same key as item.</returns>
        </member>
        <member name="M:Microsoft.Xrm.Portal.Caching.CompositeObjectCache.Add(System.String,System.Object,System.DateTimeOffset,System.String)">
            <summary>
            When overridden in a derived class, inserts a cache entry into the cache without overwriting any existing cache entry. 
            </summary>
            <param name="key">A unique identifier for the cache entry.</param>
            <param name="value">The object to insert. </param>
            <param name="absoluteExpiration">The fixed date and time at which the cache entry will expire. This parameter is required when the Add method is called.</param>
            <param name="regionName">Optional. A named region in the cache to which the cache entry can be added, if regions are implemented. Because regions are not implemented in .NET Framework 4, the default value is a null reference (Nothing in Visual Basic).</param>
            <returns>true if insertion succeeded, or false if there is an already an entry in the cache that has the same key as key.</returns>
        </member>
        <member name="M:Microsoft.Xrm.Portal.Caching.CompositeObjectCache.Add(System.String,System.Object,System.Runtime.Caching.CacheItemPolicy,System.String)">
            <summary>
            When overridden in a derived class, inserts a cache entry into the cache, specifying information about how the entry will be evicted.
            </summary>
            <param name="key">A unique identifier for the cache entry.</param>
            <param name="value">The object to insert.</param>
            <param name="policy">An object that contains eviction details for the cache entry. This object provides more options for eviction than a simple absolute expiration.</param>
            <param name="regionName">Optional. A named region in the cache to which the cache entry can be added, if regions are implemented. The default value for the optional parameter is a null reference (Nothing in Visual Basic).</param>
            <returns>true if insertion succeeded, or false if there is an already an entry in the cache that has the same key as item.</returns>
        </member>
        <member name="M:Microsoft.Xrm.Portal.Caching.CompositeObjectCache.AddOrGetExisting(System.String,System.Object,System.DateTimeOffset,System.String)">
            <summary>
            When overridden in a derived class, inserts a cache entry into the cache, by using a key, an object for the cache entry, an absolute expiration value, and an optional region to add the cache into.
            </summary>
            <returns>
            If a cache entry with the same key exists, the specified cache entry's value; otherwise, null.
            </returns>
            <param name="key">A unique identifier for the cache entry. </param><param name="value">The object to insert. </param><param name="absoluteExpiration">The fixed date and time at which the cache entry will expire. </param><param name="regionName">Optional. A named region in the cache to which the cache entry can be added, if regions are implemented. The default value for the optional parameter is null.</param>
        </member>
        <member name="M:Microsoft.Xrm.Portal.Caching.CompositeObjectCache.AddOrGetExisting(System.Runtime.Caching.CacheItem,System.Runtime.Caching.CacheItemPolicy)">
            <summary>
            When overridden in a derived class, inserts the specified <see cref="T:System.Runtime.Caching.CacheItem"/> object into the cache, specifying information about how the entry will be evicted.
            </summary>
            <returns>
            If a cache entry with the same key exists, the specified cache entry; otherwise, null.
            </returns>
            <param name="value">The object to insert. </param><param name="policy">An object that contains eviction details for the cache entry. This object provides more options for eviction than a simple absolute expiration.</param>
        </member>
        <member name="M:Microsoft.Xrm.Portal.Caching.CompositeObjectCache.AddOrGetExisting(System.String,System.Object,System.Runtime.Caching.CacheItemPolicy,System.String)">
            <summary>
            When overridden in a derived class, inserts a cache entry into the cache, specifying a key and a value for the cache entry, and information about how the entry will be evicted.
            </summary>
            <returns>
            If a cache entry with the same key exists, the specified cache entry's value; otherwise, null.
            </returns>
            <param name="key">A unique identifier for the cache entry. </param><param name="value">The object to insert.</param><param name="policy">An object that contains eviction details for the cache entry. This object provides more options for eviction than a simple absolute expiration. </param><param name="regionName">Optional. A named region in the cache to which the cache entry can be added, if regions are implemented. The default value for the optional parameter is null.</param>
        </member>
        <member name="M:Microsoft.Xrm.Portal.Caching.CompositeObjectCache.Get(System.String,System.String)">
            <summary>
            When overridden in a derived class, gets the specified cache entry from the cache as an object.
            </summary>
            <returns>
            The cache entry that is identified by <paramref name="key"/>. 
            </returns>
            <param name="key">A unique identifier for the cache entry to get. </param><param name="regionName">Optional. A named region in the cache to which the cache entry was added, if regions are implemented. The default value for the optional parameter is null.</param>
        </member>
        <member name="M:Microsoft.Xrm.Portal.Caching.CompositeObjectCache.GetCacheItem(System.String,System.String)">
            <summary>
            When overridden in a derived class, gets the specified cache entry from the cache as a <see cref="T:System.Runtime.Caching.CacheItem"/> instance.
            </summary>
            <returns>
            The cache entry that is identified by <paramref name="key"/>.
            </returns>
            <param name="key">A unique identifier for the cache entry to get. </param><param name="regionName">Optional. A named region in the cache to which the cache was added, if regions are implemented. Because regions are not implemented in .NET Framework 4, the default is null.</param>
        </member>
        <member name="M:Microsoft.Xrm.Portal.Caching.CompositeObjectCache.Set(System.String,System.Object,System.DateTimeOffset,System.String)">
            <summary>
            When overridden in a derived class, inserts a cache entry into the cache, specifying time-based expiration details. 
            </summary>
            <param name="key">A unique identifier for the cache entry. </param><param name="value">The object to insert.</param><param name="absoluteExpiration">The fixed date and time at which the cache entry will expire.</param><param name="regionName">Optional. A named region in the cache to which the cache entry can be added, if regions are implemented. The default value for the optional parameter is null.</param>
        </member>
        <member name="M:Microsoft.Xrm.Portal.Caching.CompositeObjectCache.Set(System.Runtime.Caching.CacheItem,System.Runtime.Caching.CacheItemPolicy)">
            <summary>
            When overridden in a derived class, inserts the cache entry into the cache as a <see cref="T:System.Runtime.Caching.CacheItem"/> instance, specifying information about how the entry will be evicted.
            </summary>
            <param name="item">The cache item to add.</param><param name="policy">An object that contains eviction details for the cache entry. This object provides more options for eviction than a simple absolute expiration.</param>
        </member>
        <member name="M:Microsoft.Xrm.Portal.Caching.CompositeObjectCache.Set(System.String,System.Object,System.Runtime.Caching.CacheItemPolicy,System.String)">
            <summary>
            When overridden in a derived class, inserts a cache entry into the cache. 
            </summary>
            <param name="key">A unique identifier for the cache entry. </param><param name="value">The object to insert.</param><param name="policy">An object that contains eviction details for the cache entry. This object provides more options for eviction than a simple absolute expiration.</param><param name="regionName">Optional. A named region in the cache to which the cache entry can be added, if regions are implemented. The default value for the optional parameter is null.</param>
        </member>
        <member name="M:Microsoft.Xrm.Portal.Caching.CompositeObjectCache.GetValues(System.Collections.Generic.IEnumerable{System.String},System.String)">
            <summary>
            When overridden in a derived class, gets a set of cache entries that correspond to the specified keys.
            </summary>
            <returns>
            A dictionary of key/value pairs that represent cache entries. 
            </returns>
            <param name="keys">A collection of unique identifiers for the cache entries to get. </param><param name="regionName">Optional. A named region in the cache to which the cache entry or entries were added, if regions are implemented. The default value for the optional parameter is null.</param>
        </member>
        <member name="M:Microsoft.Xrm.Portal.Caching.CompositeObjectCache.GetValues(System.String,System.String[])">
            <summary>
            Gets a set of cache entries that correspond to the specified keys.
            </summary>
            <param name="regionName">Optional. A named region in the cache to which the cache entry or entries were added, if regions are implemented. Because regions are not implemented in .NET Framework 4, the default is a null reference (Nothing in Visual Basic).</param>
            <param name="keys">A collection of unique identifiers for the cache entries to get.</param>
            <returns>A dictionary of key/value pairs that represent cache entries.</returns>
        </member>
        <member name="M:Microsoft.Xrm.Portal.Caching.CompositeObjectCache.Remove(System.String,System.String)">
            <summary>
            When overridden in a derived class, removes the cache entry from the cache.
            </summary>
            <returns>
            An object that represents the value of the removed cache entry that was specified by the key, or null if the specified entry was not found.
            </returns>
            <param name="key">A unique identifier for the cache entry. </param><param name="regionName">Optional. A named region in the cache to which the cache entry was added, if regions are implemented. The default value for the optional parameter is null.</param>
        </member>
        <member name="M:Microsoft.Xrm.Portal.Caching.CompositeObjectCache.GetCount(System.String)">
            <summary>
            When overridden in a derived class, gets the total number of cache entries in the cache. 
            </summary>
            <returns>
            The number of cache entries in the cache. If <paramref name="regionName"/> is not null, the count indicates the number of entries that are in the specified cache region. 
            </returns>
            <param name="regionName">Optional. A named region in the cache for which the cache entry count should be computed, if regions are implemented. The default value for the optional parameter is null.</param>
        </member>
        <member name="P:Microsoft.Xrm.Portal.Caching.CompositeObjectCache.DefaultCacheCapabilities">
            <summary>
            When overridden in a derived class, gets a description of the features that a cache implementation provides.
            </summary>
            <returns>
            A bitwise combination of flags that indicate the default capabilities of a cache implementation.
            </returns>
        </member>
        <member name="P:Microsoft.Xrm.Portal.Caching.CompositeObjectCache.Name">
            <summary>
            Gets the name of a specific <see cref="T:System.Runtime.Caching.ObjectCache"/> instance. 
            </summary>
            <returns>
            The name of a specific cache instance.
            </returns>
        </member>
        <member name="P:Microsoft.Xrm.Portal.Caching.CompositeObjectCache.Item(System.String)">
            <summary>
            Gets or sets the default indexer for the <see cref="T:System.Runtime.Caching.ObjectCache"/> class.
            </summary>
            <returns>
            A key that serves as an indexer into the cache instance.
            </returns>
            <param name="key">A unique identifier for a cache entry in the cache. </param>
        </member>
        <member name="T:Microsoft.Xrm.Portal.Caching.IServiceBusCacheChannel">
            <summary>
            An AppFabric Service Bus cache invalidation client channel.
            </summary>
        </member>
        <member name="T:Microsoft.Xrm.Portal.Caching.IServiceBusCacheService">
            <summary>
            An AppFabric Service Bus cache invalidation service.
            </summary>
        </member>
        <member name="M:Microsoft.Xrm.Portal.Caching.IServiceBusCacheService.Remove(System.String,System.String,System.String)">
            <summary>
            Removes a cache item on the local application.
            </summary>
            <param name="name"></param>
            <param name="key"></param>
            <param name="regionName"></param>
        </member>
        <member name="M:Microsoft.Xrm.Portal.Caching.IServiceBusCacheService.RemoveAll(System.String,System.String)">
            <summary>
            Removes all cache items on the local application.
            </summary>
            <param name="name"></param>
            <param name="regionName"></param>
        </member>
        <member name="T:Microsoft.Xrm.Portal.Caching.ServiceBusCacheService">
            <summary>
            An AppFabric Service Bus cache invalidation service.
            </summary>
            <seealso cref="T:Microsoft.Xrm.Portal.Caching.ServiceBusObjectCache"/>
        </member>
        <member name="M:Microsoft.Xrm.Portal.Caching.ServiceBusCacheService.Remove(System.String,System.String,System.String)">
            <summary>
            Removes a cache item on the local application.
            </summary>
            <param name="name"></param>
            <param name="key"></param>
            <param name="regionName"></param>
        </member>
        <member name="M:Microsoft.Xrm.Portal.Caching.ServiceBusCacheService.RemoveAll(System.String,System.String)">
            <summary>
            Removes all cache items on the local application.
            </summary>
            <param name="name"></param>
            <param name="regionName"></param>
        </member>
        <member name="T:Microsoft.Xrm.Portal.Caching.CacheServiceBusChannelFactory">
            <summary>
            A WCF client that communicates with the <see cref="T:Microsoft.Xrm.Portal.Caching.IServiceBusCacheService"/> service over the AppFabric Service Bus.
            </summary>
            <remarks>
            The service provides distributed cache invalidation requests between listening applications.
            </remarks>
            <seealso cref="T:Microsoft.Xrm.Portal.Caching.ServiceBusObjectCache"/>
        </member>
        <member name="T:Microsoft.Xrm.Portal.ServiceBus.ServiceBusChannelFactory`3">
            <summary>
            A WCF client that communicates with a service over the AppFabric Service Bus.
            </summary>
            <typeparam name="TContract">The service interface on the listening end of the bus.</typeparam>
            <typeparam name="TService">The service class on the listening end of the bus.</typeparam>
            <typeparam name="TChannel">The client channel interface.</typeparam>
        </member>
        <member name="M:Microsoft.Xrm.Portal.ServiceBus.ServiceBusChannelFactory`3.UsingChannel(System.Action{`2})">
            <summary>
            Performs an action on the client and disposes the channel.
            </summary>
            <param name="action"></param>
        </member>
        <member name="T:Microsoft.Xrm.Portal.Web.Handlers.EmbeddedResourceHttpHandler">
            <summary>
            A handler for serving embedded resources.
            </summary>
            <remarks>
            The <see cref="T:System.Web.HttpCachePolicy"/> cache policy can be adjusted by the following configuration.
            <code>
            <![CDATA[
            <configuration>
            
             <configSections>
              <section name="microsoft.xrm.portal" type="Microsoft.Xrm.Portal.Configuration.PortalCrmSection, Microsoft.Xrm.Portal"/>
             </configSections>
            
             <microsoft.xrm.portal>
              <cachePolicy>
               <embeddedResource
                cacheExtension=""
                cacheability="ServerAndPrivate" [NoCache | Private | Public | Server | ServerAndNoCache | ServerAndPrivate]
                expires=""
                maxAge="01:00:00" [HH:MM:SS]
                revalidation="" [AllCaches | ProxyCaches | None]
                slidingExpiration="" [false | true]
                validUntilExpires="" [false | true]
                varyByCustom=""
                varyByContentEncodings="gzip;x-gzip;deflate"
                varyByContentHeaders=""
                varyByParams=""
                />
              </cachePolicy>
             </microsoft.xrm.portal>
             
            </configuration>
            ]]>
            </code>
            </remarks>
            <seealso cref="T:Microsoft.Xrm.Portal.Configuration.PortalCrmConfigurationManager"/>
            <seealso cref="T:Microsoft.Xrm.Portal.Configuration.HttpCachePolicyElement"/>
        </member>
        <member name="T:Microsoft.Xrm.Portal.Caching.ServiceBusCacheServiceInstanceProvider">
            <summary>
            Custom service bus behavior for the <see cref="T:Microsoft.Xrm.Portal.Caching.CacheServiceBusServiceHost"/>.
            </summary>
        </member>
        <member name="T:Microsoft.Xrm.Portal.Configuration.DependencyProviderElement">
            <summary>
            The configuration settings for <see cref="T:Microsoft.Xrm.Portal.Configuration.IDependencyProvider"/> dependencies.
            </summary>
            <remarks>
            For an example of the configuration format refer to the <see cref="T:Microsoft.Xrm.Portal.Configuration.PortalCrmConfigurationManager"/>.
            </remarks>
        </member>
        <member name="M:Microsoft.Xrm.Portal.Configuration.DependencyProviderElement.GetDependencyProvider(System.String)">
            <summary>
            Creates a <see cref="T:Microsoft.Xrm.Portal.Configuration.IDependencyProvider"/> object.
            </summary>
            <param name="portalName"></param>
            <returns></returns>
        </member>
        <member name="P:Microsoft.Xrm.Portal.Configuration.DependencyProviderElement.Name">
            <summary>
            Gets or sets the element name.
            </summary>
        </member>
        <member name="P:Microsoft.Xrm.Portal.Configuration.DependencyProviderElement.Type">
            <summary>
            The dependency type name.
            </summary>
        </member>
        <member name="T:Microsoft.Xrm.Portal.Web.UI.WebControls.EntityRightsView">
            <summary>
            Templated <see cref="T:System.Web.UI.WebControls.WebControl"/> to render alternate views based on whether
            the current user has specified <see cref="P:Microsoft.Xrm.Portal.Web.UI.WebControls.EntityRightsView.Rights"/> (<see cref="T:Microsoft.Xrm.Client.Security.CrmEntityRight"/>) over a given
            <see cref="P:Microsoft.Xrm.Portal.Web.UI.WebControls.EntityRightsView.Entity"/>. If no entity is specified the NoRightsTemplate will be rendered.
            </summary>
            <example>
            <code>
            <![CDATA[
            <adx:EntityRightsView Rights="Change" runat="server">
            	<RightsTemplate>
            		<p>You have permissions to change this entity.</p>
            	</RightsTemplate>
            	<NoRightsTemplate>
            		<p>You do not have permissions to change this entity.</p>
            	</NoRightsTemplate>
            </adx:EntityRightsView>
            ]]>
            </code>
            </example>
        </member>
        <member name="P:Microsoft.Xrm.Portal.Web.UI.WebControls.EntityRightsView.Entity">
            <summary>
            Gets or sets the <see cref="P:Microsoft.Xrm.Portal.Web.UI.WebControls.EntityRightsView.Entity"/> to be used the target of the rights assertion.
            </summary>
        </member>
        <member name="P:Microsoft.Xrm.Portal.Web.UI.WebControls.EntityRightsView.Rights">
            <summary>
            The <see cref="T:Microsoft.Xrm.Client.Security.CrmEntityRight"/> to be asserted against the target entity, in order to
            determine whether or not this control will render its contents.
            </summary>
        </member>
        <member name="T:Microsoft.Xrm.Portal.Web.UI.CrmEntityFormView.CellBinding">
            <summary>
            Holds a function for getting a value of a cell and an action for setting a value of a cell.
            </summary>
        </member>
        <member name="P:Microsoft.Xrm.Portal.Web.UI.CrmEntityFormView.CellBinding.Get">
            <summary>
            A function to get the value of the cell.
            </summary>
        </member>
        <member name="P:Microsoft.Xrm.Portal.Web.UI.CrmEntityFormView.CellBinding.Set">
            <summary>
            An action to set the value of the cell.
            </summary>
        </member>
        <member name="T:Microsoft.Xrm.Portal.Web.Modules.PortalRoutingModule">
            <summary>
            Manages the URL routing for a standard portal website.
            </summary>
            <remarks>
            <example>
            Example configuration.
            <code>
            <![CDATA[
            <configuration>
            
             <configSections>
              <section name="microsoft.xrm.portal" type="Microsoft.Xrm.Portal.Configuration.PortalCrmSection, Microsoft.Xrm.Portal"/>
             </configSections>
             
             <system.webServer>
              <modules runAllManagedModulesForAllRequests="true">
               <add name="PortalRouting" type="Microsoft.Xrm.Portal.Web.Modules.PortalRoutingModule, Microsoft.Xrm.Portal" preCondition="managedHandler"/>
              </modules>
             </system.webServer>
             
             <microsoft.xrm.portal rewriteVirtualPathEnabled="true" [false | true] />
             
            </configuration>
            ]]>
            </code>
            </example>
            </remarks>
            <seealso cref="T:Microsoft.Xrm.Portal.Configuration.PortalCrmConfigurationManager"/>
            <seealso cref="T:Microsoft.Xrm.Portal.Web.Routing.PortalRouteHandler"/>
            <seealso cref="T:Microsoft.Xrm.Portal.Web.Routing.EmbeddedResourceRouteHandler"/>
            <seealso cref="T:Microsoft.Xrm.Portal.Web.Routing.CompositeEmbeddedResourceRouteHandler"/>
            <seealso cref="T:Microsoft.Xrm.Portal.Web.Routing.EntityRouteHandler"/>
        </member>
        <member name="M:Microsoft.Xrm.Portal.Web.Modules.PortalRoutingModule.RewriteVirtualPath(System.Object,System.EventArgs)">
            <summary>
            Detects the presence of a virtual path within the request URL. If found, the context URL is rewritten to the virtual path.
            </summary>
            <param name="sender"></param>
            <param name="args"></param>
        </member>
        <member name="P:Microsoft.Xrm.Portal.Web.Modules.PortalRoutingModule.PortalName">
            <summary>
            The name of the <see cref="T:Microsoft.Xrm.Portal.Configuration.PortalContextElement"/> specifying the current portal.
            </summary>
        </member>
        <member name="P:Microsoft.Xrm.Portal.Web.Modules.PortalRoutingModule.UseEmbeddedResourceVirtualPathProvider">
            <summary>
            Enables routing to the <see cref="T:Microsoft.Xrm.Portal.Web.Routing.EmbeddedResourceRouteHandler"/> for serving embedded resources.
            </summary>
        </member>
        <member name="P:Microsoft.Xrm.Portal.Web.Modules.PortalRoutingModule.IncludeCacheInvalidationHandler">
            <summary>
            Enables routing to the <see cref="T:Microsoft.Xrm.Portal.Web.Handlers.CacheInvalidationHandler"/> by specifying the path '/Cache.axd' followed by querystring parameters.
            </summary>
        </member>
        <member name="T:Microsoft.Xrm.Portal.Web.ICrmEntityContentFormatter">
            <summary>
            Provides an interface through which entity content can be transformed before it is rendered.
            </summary>
        </member>
        <member name="M:Microsoft.Xrm.Portal.Web.ICrmEntityContentFormatter.Format(System.String,Microsoft.Xrm.Sdk.Entity,System.Object)">
            <summary>
            Formats/transforms content for rendering.
            </summary>
            <param name="content">The content to be formatted. This value may be null, and implementations should handle this as a valid case.</param>
            <param name="entity">The <see cref="T:Microsoft.Xrm.Sdk.Entity"/> to which the content being formatted belongs.</param>
            <param name="context">The context from which this method is called (usually the caller). This value may be null, and implementations should handle this as a valid case.</param>
            <returns>The transformed content.</returns>
        </member>
        <member name="T:Microsoft.Xrm.Portal.Web.EmbeddedResourceNode">
            <summary>
            An embedded resource record.
            </summary>
        </member>
        <member name="P:Microsoft.Xrm.Portal.Web.EmbeddedResourceNode.Name">
            <summary>
            The local name.
            </summary>
        </member>
        <member name="P:Microsoft.Xrm.Portal.Web.EmbeddedResourceNode.IsDirectory">
            <summary>
            Indicates that the node is a directory.
            </summary>
        </member>
        <member name="P:Microsoft.Xrm.Portal.Web.EmbeddedResourceNode.IsFile">
            <summary>
            Indicates that the node is a file.
            </summary>
        </member>
        <member name="P:Microsoft.Xrm.Portal.Web.EmbeddedResourceNode.VirtualPath">
            <summary>
            The virtual path of the node.
            </summary>
        </member>
        <member name="P:Microsoft.Xrm.Portal.Web.EmbeddedResourceNode.ResourceName">
            <summary>
            The resource name.
            </summary>
        </member>
        <member name="P:Microsoft.Xrm.Portal.Web.EmbeddedResourceNode.Children">
            <summary>
            The child nodes.
            </summary>
        </member>
        <member name="T:Microsoft.Xrm.Portal.ServiceBus.ServiceBusServiceHost`2">
            <summary>
            A WCF service host that listens on an AppFabric Service Bus endpoint.
            </summary>
            <typeparam name="TContract"></typeparam>
            <typeparam name="TService"></typeparam>
        </member>
        <member name="T:Microsoft.Xrm.Portal.Configuration.PortalCrmSection">
            <summary>
            Represents a collection of site configuration nodes and settings for all sites in general.
            </summary>
            <seealso cref="T:Microsoft.Xrm.Portal.Configuration.PortalCrmConfigurationManager"/>
        </member>
        <member name="F:Microsoft.Xrm.Portal.Configuration.PortalCrmSection.SectionName">
            <summary>
            The element name of the section.
            </summary>
        </member>
        <member name="P:Microsoft.Xrm.Portal.Configuration.PortalCrmSection.Portals">
            <summary>
            A collection of <see cref="T:Microsoft.Xrm.Portal.Configuration.PortalContextElement"/>.
            </summary>
        </member>
        <member name="P:Microsoft.Xrm.Portal.Configuration.PortalCrmSection.CachePolicy">
            <summary>
            The settings in which the <see cref="T:System.Web.HttpCachePolicy"/> of the <see cref="T:System.Web.HttpResponse"/> will cache rendered media.
            </summary>
        </member>
        <member name="P:Microsoft.Xrm.Portal.Configuration.PortalCrmSection.ServiceBusObjectCacheName">
            <summary>
            The name of the <see cref="T:Microsoft.Xrm.Client.Configuration.ObjectCacheElement"/> designated as the AppFabric Service Bus cache provider.
            </summary>
        </member>
        <member name="P:Microsoft.Xrm.Portal.Configuration.PortalCrmSection.RewriteVirtualPathEnabled">
            <summary>
            Enables detection of incoming virtual paths (those prefixed by "~/") from the client. If found, the context URL is rewritten to the virtual path.
            </summary>
        </member>
        <member name="P:Microsoft.Xrm.Portal.Web.UI.WebControls.SavedQueryDataSource.CrmDataContextName">
            <summary>
            Gets or sets the name of the data context to be used to connect to Microsoft Dynamics CRM.
            </summary>
        </member>
        <member name="P:Microsoft.Xrm.Portal.Web.UI.WebControls.SavedQueryDataSource.SavedQueryName">
            <summary>
            Gets or sets the name of the saved query.
            </summary>
        </member>
        <member name="T:Microsoft.Xrm.Portal.Web.UI.WebControls.CrmMetadataDataSource">
            <summary>
            Represents a Microsoft Dynamics CRM web service to data-bound controls.
            </summary>
        </member>
        <member name="P:Microsoft.Xrm.Portal.Web.UI.WebControls.CrmMetadataDataSource.CrmDataContextName">
            <summary>
            Gets or sets the name of the data context to be used to connect to Microsoft Dynamics CRM.
            </summary>
        </member>
        <member name="P:Microsoft.Xrm.Portal.Web.UI.WebControls.CrmMetadataDataSource.CacheParameters">
            <summary>
            Gets the cache settings.
            </summary>
        </member>
        <member name="T:Microsoft.Xrm.Portal.Web.UI.WebControls.CacheItemParameter">
            <summary>
            Binds the value of a property of a collection item to a parameter object.
            </summary>
        </member>
        <member name="P:Microsoft.Xrm.Portal.Web.UI.WebControls.CacheItemParameter.PropertyName">
            <summary>
            Gets or sets the name of the property from which to obtain the value.
            </summary>
        </member>
        <member name="P:Microsoft.Xrm.Portal.Web.UI.WebControls.CacheItemParameter.Format">
            <summary>
            Gets or sets an optional format string for augmenting the value.
            </summary>
        </member>
        <member name="T:Microsoft.Xrm.Portal.Web.Security.LiveId.WindowsLiveLogin">
            <summary>
            Sample implementation of Web Authentication and Delegated Authentication 
            protocol. Also includes trusted sign-in and application 
            verification sample implementations.
            </summary>
        </member>
        <member name="M:Microsoft.Xrm.Portal.Web.Security.LiveId.WindowsLiveLogin.debug(System.String)">
            <summary>
            Stub implementation for logging debug output. You can run
            a tool such as 'dbmon' to see the output.
            </summary>
        </member>
        <member name="M:Microsoft.Xrm.Portal.Web.Security.LiveId.WindowsLiveLogin.#ctor(System.String,System.String)">
             <summary>
             Initialize the WindowsLiveLogin module with the
             application ID and secret key.
            
             We recommend that you employ strong measures to protect
             the secret key. The secret key should never be
             exposed to the Web or other users.
             </summary>
        </member>
        <member name="M:Microsoft.Xrm.Portal.Web.Security.LiveId.WindowsLiveLogin.#ctor(System.String,System.String,System.String)">
             <summary>
             Initialize the WindowsLiveLogin module with the
             application ID, secret key, and security algorithm.
            
             We recommend that you employ strong measures to protect
             the secret key. The secret key should never be
             exposed to the Web or other users.
             </summary>
        </member>
        <member name="M:Microsoft.Xrm.Portal.Web.Security.LiveId.WindowsLiveLogin.#ctor(System.Boolean,System.String,System.String)">
            <summary>
            Initialize the WindowsLiveLogin module with the
            forceDelAuthNonProvisioned flag, policy URL, and return URL.
            
            The 'force_delauth_nonprovisioned' flag indicates whether
            your application is registered for Delegated Authentication 
            (that is, whether it uses an application ID and secret key). We 
            recommend that your Delegated Authentication application always 
            be registered for enhanced security and functionality. 
            </summary>
        </member>
        <member name="M:Microsoft.Xrm.Portal.Web.Security.LiveId.WindowsLiveLogin.#ctor(System.String,System.String,System.String,System.Boolean)">
             <summary>
             Initialize the WindowsLiveLogin module with the
             application ID, secret key, security algorithm and 
             forceDelAuthNonProvisioned flag.
            
             We recommend that you employ strong measures to protect
             the secret key. The secret key should never be
             exposed to the Web or other users.
             
             The 'force_delauth_nonprovisioned' flag indicates whether
             your application is registered for Delegated Authentication 
             (that is, whether it uses an application ID and secret key). We 
             recommend that your Delegated Authentication application always 
             be registered for enhanced security and functionality. 
             </summary>
        </member>
        <member name="M:Microsoft.Xrm.Portal.Web.Security.LiveId.WindowsLiveLogin.#ctor(System.String,System.String,System.String,System.Boolean,System.String)">
             <summary>
             Initialize the WindowsLiveLogin module with the
             application ID, secret key, security algorithm,    
             forceDelAuthNonProvisioned and policy URL use.
            
             We recommend that you employ strong measures to protect
             the secret key. The secret key should never be
             exposed to the Web or other users.
             
             The 'force_delauth_nonprovisioned' flag indicates whether
             your application is registered for Delegated Authentication 
             (that is, whether it uses an application ID and secret key). We 
             recommend that your Delegated Authentication application always 
             be registered for enhanced security and functionality. 
             </summary>
        </member>
        <member name="M:Microsoft.Xrm.Portal.Web.Security.LiveId.WindowsLiveLogin.#ctor(System.String,System.String,System.String,System.Boolean,System.String,System.String)">
             <summary>
             Initialize the WindowsLiveLogin module with the
             application ID, secret key, security algorithm,    
             forceDelAuthNonProvisioned, policy URL and return URL.
            
             We recommend that you employ strong measures to protect
             the secret key. The secret key should never be
             exposed to the Web or other users.
             
             The 'force_delauth_nonprovisioned' flag indicates whether
             your application is registered for Delegated Authentication 
             (that is, whether it uses an application ID and secret key). We 
             recommend that your Delegated Authentication application always 
             be registered for enhanced security and functionality.
             </summary>
        </member>
        <member name="M:Microsoft.Xrm.Portal.Web.Security.LiveId.WindowsLiveLogin.#ctor(System.Boolean)">
            <summary>
            Initialize the WindowsLiveLogin module from the
            web.config file if loadAppSettings is true. Otherwise,
            you will have to manually set the AppId, Secret and
            SecurityAlgorithm properties.
            
            In a Delegated Authentication scenario, you may also specify
            the return and privacy policy URLs to use, as shown in the 
            Delegated Authentication samples.     
            </summary>
        </member>
        <member name="M:Microsoft.Xrm.Portal.Web.Security.LiveId.WindowsLiveLogin.#ctor(System.String)">
            <summary><![CDATA[
            Initialize the WindowsLiveLogin module from a settings file. 
            
            'settingsFile' specifies the location of the XML settings
            file containing the application ID, secret key, an optional
            security algorithm and a privacy policy URL (required for
            Delegated Auth).  The file is of the following format:
            
            <windowslivelogin>
              <appid>APPID</appid>
              <secret>SECRET</secret>
              <securityalgorithm>wsignin1.0</securityalgorithm>
              <policyurl>http://[your domain]/[your privacy policy]</policyurl>
              <returnurl>http://[your domain]/[your return url]</policyurl>
            </windowslivelogin>
            
            In a Delegated Authentication scenario, you may also specify
            'returnurl' and 'policyurl' in the settings file. 
             
            We recommend that you store the Windows Live Login settings file
            in an area on your server that cannot be accessed through
            the Internet. This file contains important confidential
            information.      
            ]]></summary>
        </member>
        <member name="M:Microsoft.Xrm.Portal.Web.Security.LiveId.WindowsLiveLogin.GetLoginUrl">
            <summary>
            Returns the sign-in URL to use for the Windows Live Login server.
            We recommend that you use the Sign In control instead.
            </summary>
            <returns>Sign-in URL</returns>
        </member>
        <member name="M:Microsoft.Xrm.Portal.Web.Security.LiveId.WindowsLiveLogin.GetLoginUrl(System.String)">
            <summary>
            Returns the sign-in URL to use for the Windows Live Login server.
            We recommend that you use the Sign In control instead.
            </summary>
            <param name="context">If you specify it, <paramref
            name="context"/> will be returned as-is in the sign-in
            response for site-specific use.</param>
            <returns>Sign-in URL</returns>
        </member>
        <member name="M:Microsoft.Xrm.Portal.Web.Security.LiveId.WindowsLiveLogin.GetLoginUrl(System.String,System.String)">
            <summary>
            Returns the sign-in URL to use for the Windows Live Login server.
            We recommend that you use the Sign In control instead.
            </summary>
            <param name="context">If you specify it, <paramref
            name="context"/> will be returned as-is in the sign-in
            response for site-specific use.</param>
            <param name="market">The language in which the sign-in page is 
            displayed is configured by culture ID (For example, 'fr-fr' or 
            'en-us') specified in the 'market' parameter.</param>
            <returns>Sign-in URL</returns>
        </member>
        <member name="M:Microsoft.Xrm.Portal.Web.Security.LiveId.WindowsLiveLogin.GetLogoutUrl">
            <summary>
            Returns the sign-out URL to use for the Windows Live Login server.
            We recommend that you use the Sign In control instead.
            </summary>
            <returns>Sign-out URL</returns>
        </member>
        <member name="M:Microsoft.Xrm.Portal.Web.Security.LiveId.WindowsLiveLogin.GetLogoutUrl(System.String)">
            <summary>
            Returns the sign-out URL to use for the Windows Live Login server.
            We recommend that you use the Sign In control instead.
            </summary>
            <param name="market">The language in which the sign-in page is 
            displayed is configured by culture ID (For example, 'fr-fr' or 
            'en-us') specified in the 'market' parameter.</param>
            <returns>Sign-out URL</returns>
        </member>
        <member name="M:Microsoft.Xrm.Portal.Web.Security.LiveId.WindowsLiveLogin.ProcessLogin(System.Collections.Specialized.NameValueCollection)">
             <summary>
             Processes the sign-in response from the Windows Live Login server.
             </summary>
            
             <param name="query">Contains the preprocessed POST query
             such as that returned by HttpRequest.Form</param>
             
             <returns>The method returns a User object on successful
             sign-in; otherwise null.</returns>
        </member>
        <member name="M:Microsoft.Xrm.Portal.Web.Security.LiveId.WindowsLiveLogin.ProcessToken(System.String)">
            <summary>
            Decodes and validates a Web Authentication token. Returns a User
            object on success.
            </summary>
        </member>
        <member name="M:Microsoft.Xrm.Portal.Web.Security.LiveId.WindowsLiveLogin.ProcessToken(System.String,System.String)">
            <summary>
            Decodes and validates a Web Authentication token. Returns a User
            object on success. If a context is passed in, it will be
            returned as the context field in the User object.
            </summary>
            <param name="token">Web Authentication token</param>
            <param name="context">If you specify it, <paramref
            name="context"/> will be returned as-is in the sign-in
            response for site-specific use.</param>        
            <returns>User object</returns>
        </member>
        <member name="M:Microsoft.Xrm.Portal.Web.Security.LiveId.WindowsLiveLogin.GetClearCookieResponse(System.String@,System.Byte[]@)">
            <summary>
            Returns an appropriate content type and body
            response that the application handler can return to
            signify a successful sign-out from the application.
            
            When a user signs out of Windows Live or a Windows Live
            application, a best-effort attempt is made to sign the user out
            from all other Windows Live applications the user might be signed
            in to. This is done by calling the handler page for each
            application with 'action' parameter set to 'clearcookie' in the query
            string. The application handler is then responsible for clearing
            any cookies or data associated with the sign-in. After successfully
            signing the user out, the handler should return a GIF (any
            GIF) as response to the action=clearcookie query.
            </summary>
        </member>
        <member name="M:Microsoft.Xrm.Portal.Web.Security.LiveId.WindowsLiveLogin.GetConsentUrl(System.String)">
            <summary>
            Returns the consent URL to use for Delegated Authentication for
            the given comma-delimited list of offers.
            </summary>
            <param name="offers">Comma-delimited list of offers.</param>
            <returns>Consent URL</returns>
        </member>
        <member name="M:Microsoft.Xrm.Portal.Web.Security.LiveId.WindowsLiveLogin.GetConsentUrl(System.String,System.String)">
            <summary>
            Returns the consent URL to use for Delegated Authentication for
            the given comma-delimited list of offers.
            </summary>
            <param name="offers">Comma-delimited list of offers.</param>
            <param name="context">If you specify it, <paramref
            name="context"/> will be returned as-is in the consent 
            response for site-specific use.</param>
            <returns>Consent URL</returns>
        </member>
        <member name="M:Microsoft.Xrm.Portal.Web.Security.LiveId.WindowsLiveLogin.GetConsentUrl(System.String,System.String,System.String)">
            <summary>
            Returns the consent URL to use for Delegated Authentication for
            the given comma-delimited list of offers.
            </summary>
            <param name="offers">Comma-delimited list of offers.</param>
            <param name="context">If you specify it, <paramref
            name="context"/> will be returned as-is in the consent 
            response for site-specific use.</param>
            <param name="ru">The registered/configured return URL will be 
            overridden by 'ru' specified here.</param>
            <returns>Consent URL</returns>
        </member>
        <member name="M:Microsoft.Xrm.Portal.Web.Security.LiveId.WindowsLiveLogin.GetConsentUrl(System.String,System.String,System.String,System.String)">
            <summary>
            Returns the consent URL to use for Delegated Authentication for
            the given comma-delimited list of offers.
            </summary>
            <param name="offers">Comma-delimited list of offers.</param>
            <param name="context">If you specify it, <paramref
            name="context"/> will be returned as-is in the sign-in
            response for site-specific use.</param>
            <param name="ru">The registered/configured return URL will be 
            overridden by 'ru' specified here.</param>
            <param name="market">The language in which the consent page is 
            displayed is configured by culture ID (For example, 'fr-fr' or 
            'en-us') specified in the 'market' parameter.</param>
            <returns>Consent URL</returns>
        </member>
        <member name="M:Microsoft.Xrm.Portal.Web.Security.LiveId.WindowsLiveLogin.GetRefreshConsentTokenUrl(System.String,System.String)">
            <summary>
            Returns the URL to use to download a new consent token, given the 
            offers and refresh token.
            </summary>
            <param name="offers">Comma-delimited list of offers.</param>
            <param name="refreshToken">Refresh token.</param>
            <returns>Refresh consent token URL</returns>
        </member>
        <member name="M:Microsoft.Xrm.Portal.Web.Security.LiveId.WindowsLiveLogin.GetRefreshConsentTokenUrl(System.String,System.String,System.String)">
            <summary>
            Returns the URL to use to download a new consent token, given the 
            offers and refresh token.
            </summary>
            <param name="offers">Comma-delimited list of offers.</param>
            <param name="refreshToken">Refresh token.</param>
            <returns>Refresh consent token URL</returns>
            <param name="ru">The registered/configured return URL will be 
            overridden by 'ru' specified here.</param>
            <returns>Refresh consent token URL</returns>
        </member>
        <member name="M:Microsoft.Xrm.Portal.Web.Security.LiveId.WindowsLiveLogin.GetManageConsentUrl">
            <summary>
            Returns the URL for the consent-management user interface.
            </summary>
            <returns>Manage consent URL</returns>
        </member>
        <member name="M:Microsoft.Xrm.Portal.Web.Security.LiveId.WindowsLiveLogin.GetManageConsentUrl(System.String)">
            <summary>
            Returns the URL for the consent-management user interface.
            </summary>
            <param name="market">The language in which the consent page is 
            displayed is configured by culture ID (For example, 'fr-fr' or 
            'en-us') specified in the 'market' parameter.</param>
            <returns>Manage consent URL</returns>
        </member>
        <member name="M:Microsoft.Xrm.Portal.Web.Security.LiveId.WindowsLiveLogin.ProcessConsent(System.Collections.Specialized.NameValueCollection)">
            <summary>
            Processes the POST response from the Delegated Authentication 
            service after a user has granted consent. The processConsent
            function extracts the consent token string and returns the result 
            of invoking the processConsentToken method. 
            </summary>
            <param name="query">Response from the Delegated Authentication service.</param>
            <returns>ConsentToken</returns>
        </member>
        <member name="M:Microsoft.Xrm.Portal.Web.Security.LiveId.WindowsLiveLogin.ProcessConsentToken(System.String)">
            <summary>
            Processes the consent token string that is returned in the POST 
            response by the Delegated Authentication service after a 
            user has granted consent.
            </summary>
            <param name="token">Raw token.</param>
            <returns>ConsentToken</returns>
        </member>
        <member name="M:Microsoft.Xrm.Portal.Web.Security.LiveId.WindowsLiveLogin.ProcessConsentToken(System.String,System.String)">
            <summary>
            Processes the consent token string that is returned in the POST 
            response by the Delegated Authentication service after a 
            user has granted consent.
            </summary>
            <param name="token">Raw token.</param>
            <param name="context">If you specify it, <paramref
            name="context"/> will be returned as-is in the sign-in
            response for site-specific use.</param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.Xrm.Portal.Web.Security.LiveId.WindowsLiveLogin.RefreshConsentToken(Microsoft.Xrm.Portal.Web.Security.LiveId.WindowsLiveLogin.ConsentToken)">
            <summary>
            Attempts to obtain a new, refreshed token and return it. The 
            original token is not modified.
            </summary>
            <param name="token">ConsentToken object.</param>
            <returns>Refreshed ConsentToken object.</returns>
        </member>
        <member name="M:Microsoft.Xrm.Portal.Web.Security.LiveId.WindowsLiveLogin.RefreshConsentToken(Microsoft.Xrm.Portal.Web.Security.LiveId.WindowsLiveLogin.ConsentToken,System.String)">
            <summary>
            Attempts to obtain a new, refreshed token and return it. The 
            original token is not modified.
            </summary>
            <param name="token">ConsentToken object.</param>
            <param name="ru">The registered/configured return URL will be 
            overridden by 'ru' specified here.</param>
            <returns>Refreshed ConsentToken object.</returns>
        </member>
        <member name="M:Microsoft.Xrm.Portal.Web.Security.LiveId.WindowsLiveLogin.RefreshConsentToken(System.String,System.String)">
            <summary>
            Attempts to obtain a new, refreshed token and return it using 
            the offers and refresh token. The original token is not modified.
            </summary>
            <param name="offers">Comma-delimited list of offers.</param>
            <param name="refreshToken">Refresh token.</param>
            <returns>Refreshed ConsentToken object.</returns>
        </member>
        <member name="M:Microsoft.Xrm.Portal.Web.Security.LiveId.WindowsLiveLogin.RefreshConsentToken(System.String,System.String,System.String)">
            <summary>
            Attempts to obtain a new, refreshed token and return it using 
            the offers and refresh token. The original token is not modified.
            </summary>
            <param name="offers">Comma-delimited list of offers.</param>
            <param name="refreshToken">Refresh token.</param>
            <param name="ru">The registered/configured return URL will be 
            overridden by 'ru' specified here.</param>
            <returns>Refreshed ConsentToken object.</returns>
        </member>
        <member name="M:Microsoft.Xrm.Portal.Web.Security.LiveId.WindowsLiveLogin.DecodeAndValidateToken(System.String)">
            <summary>
            Decodes and validates the raw token.
            </summary>
            <param name="token"></param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.Xrm.Portal.Web.Security.LiveId.WindowsLiveLogin.DecodeAndValidateToken(System.String,System.Byte[],System.Byte[])">
            <summary>
            Decodes and validates the raw token with appropriate crypt key 
            and sign key.
            </summary>
            <param name="token">Raw token.</param>
            <param name="cryptKey">Crypt key.</param>
            <param name="signKey">Sign key.</param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.Xrm.Portal.Web.Security.LiveId.WindowsLiveLogin.DecodeToken(System.String)">
             <summary>
             Decode the given token. Returns null on failure.
             </summary>
            
             <list type="number">
             <item>First, the string is URL unescaped and base64
             decoded.</item>
             <item>Second, the IV is extracted from the first 16 bytes
             of the string.</item>
             <item>Finally, the string is decrypted by using the
             encryption key.</item> 
             </list>
             <param name="token">Raw token.</param>
             <returns>Decoded token.</returns>
        </member>
        <member name="M:Microsoft.Xrm.Portal.Web.Security.LiveId.WindowsLiveLogin.DecodeToken(System.String,System.Byte[])">
             <summary>
             Decode the given token. Returns null on failure.
             </summary>
            
             <list type="number">
             <item>First, the string is URL unescaped and base64
             decoded.</item>
             <item>Second, the IV is extracted from the first 16 bytes
             of the string.</item>
             <item>Finally, the string is decrypted by using the
             encryption key.</item> 
             </list>
             <param name="token">Raw token.</param>
             <param name="cryptKey">Crypt key.</param>
             <returns>Decoded token.</returns>
        </member>
        <member name="M:Microsoft.Xrm.Portal.Web.Security.LiveId.WindowsLiveLogin.SignToken(System.String)">
            <summary>
            Creates a signature for the given string.
            </summary>
        </member>
        <member name="M:Microsoft.Xrm.Portal.Web.Security.LiveId.WindowsLiveLogin.SignToken(System.String,System.Byte[])">
            <summary>
            Creates a signature for the given string by using the
            signature key.
            </summary>
        </member>
        <member name="M:Microsoft.Xrm.Portal.Web.Security.LiveId.WindowsLiveLogin.ValidateToken(System.String)">
            <summary>
            Extracts the signature from the token and validates it.
            </summary>
            <param name="token"></param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.Xrm.Portal.Web.Security.LiveId.WindowsLiveLogin.ValidateToken(System.String,System.Byte[])">
            <summary>
            Extracts the signature from the token and validates it by using the 
            signature key.
            </summary>
        </member>
        <member name="M:Microsoft.Xrm.Portal.Web.Security.LiveId.WindowsLiveLogin.GetAppVerifier">
            <summary>
            Generates an Application Verifier token.
            </summary>
        </member>
        <member name="M:Microsoft.Xrm.Portal.Web.Security.LiveId.WindowsLiveLogin.GetAppVerifier(System.String)">
            <summary>
            Generates an Application Verifier token. An IP address
            can be included in the token.
            </summary>
        </member>
        <member name="M:Microsoft.Xrm.Portal.Web.Security.LiveId.WindowsLiveLogin.GetAppLoginUrl">
             <summary>
             Returns the URL needed to retrieve the application
             security token. The application security token
             will be generated for the Windows Live site.
            
             JavaScript Output Notation (JSON) output is returned:
            
             {"token":"&lt;value&gt;"}
             </summary>
        </member>
        <member name="M:Microsoft.Xrm.Portal.Web.Security.LiveId.WindowsLiveLogin.GetAppLoginUrl(System.String)">
             <summary>
             Returns the URL needed to retrieve the application
             security token.
            
             By default, the application security token will be
             generated for the Windows Live site; a specific Site ID
             can optionally be specified in 'siteId'.
            
             JSON output is returned:
            
             {"token":"&lt;value&gt;"}
             </summary>
        </member>
        <member name="M:Microsoft.Xrm.Portal.Web.Security.LiveId.WindowsLiveLogin.GetAppLoginUrl(System.String,System.String)">
             <summary>
             Returns the URL needed to retrieve the application
             security token.
            
             By default, the application security token will be
             generated for the Windows Live site; a specific Site ID
             can optionally be specified in 'siteId'. The IP address
             can also optionally be included in 'ip'.
            
             JSON output is returned:
            
             {"token":"&lt;value&gt;"}
             </summary>
        </member>
        <member name="M:Microsoft.Xrm.Portal.Web.Security.LiveId.WindowsLiveLogin.GetAppLoginUrl(System.String,System.String,System.Boolean)">
             <summary>
             Returns the URL needed to retrieve the application
             security token.
            
             By default, the application security token will be
             generated for the Windows Live site; a specific Site ID
             can optionally be specified in 'siteId'. The IP address
             can also optionally be included in 'ip'.
            
             If 'js' is false, then JSON output is returned: 
            
             {"token":"&lt;value&gt;"}
            
             Otherwise, a JavaScript response is returned. It is assumed
             that WLIDResultCallback is a custom function implemented to
             handle the token value:
             
             WLIDResultCallback("&lt;tokenvalue&gt;");
             </summary>
        </member>
        <member name="M:Microsoft.Xrm.Portal.Web.Security.LiveId.WindowsLiveLogin.GetAppSecurityToken">
            <summary>
            Retrieves the application security token for application
            verification from the application sign-in URL. The
            application security token will be generated for the
            Windows Live site.
            </summary>
        </member>
        <member name="M:Microsoft.Xrm.Portal.Web.Security.LiveId.WindowsLiveLogin.GetAppSecurityToken(System.String)">
             <summary>
             Retrieves the application security token for application
             verification from the application sign-in URL.
            
             By default, the application security token will be
             generated for the Windows Live site; a specific Site ID
             can optionally be specified in 'siteId'.
             </summary>
        </member>
        <member name="M:Microsoft.Xrm.Portal.Web.Security.LiveId.WindowsLiveLogin.GetAppSecurityToken(System.String,System.String)">
             <summary>
             Retrieves the application security token for application
             verification from the application sign-in URL.
            
             By default, the application security token will be
             generated for the Windows Live site; a specific Site ID
             can optionally be specified in 'siteId'. The IP address
             can also optionally be included in 'ip'.
            
             Implementation note: The application security token is
             downloaded from the application sign-in URL in JSON format
             {"token":"&lt;value&gt;"}, so we need to extract
             &lt;value&gt; from the string and return it as seen here.
             </summary>
        </member>
        <member name="M:Microsoft.Xrm.Portal.Web.Security.LiveId.WindowsLiveLogin.GetAppRetCode">
            <summary>
            Returns a string that can be passed to the GetTrustedParams
            function as the 'retcode' parameter. If this is specified as
            the 'retcode', then the app will be used as return URL
            after it finishes trusted sign-in.  
            </summary>
        </member>
        <member name="M:Microsoft.Xrm.Portal.Web.Security.LiveId.WindowsLiveLogin.GetTrustedParams(System.String)">
            <summary>
            Returns a table of key-value pairs that must be posted to
            the sign-in URL for trusted sign-in. Use HTTP POST to do
            this. Be aware that the values in the table are neither
            URL nor HTML escaped and may have to be escaped if you are
            inserting them in code such as an HTML form.
            
            The user to be trusted on the local site is passed in as
            string 'user'.
            </summary>
        </member>
        <member name="M:Microsoft.Xrm.Portal.Web.Security.LiveId.WindowsLiveLogin.GetTrustedParams(System.String,System.String)">
            <summary>
            Returns a table of key-value pairs that must be posted to
            the sign-in URL for trusted sign-in. Use HTTP POST to do
            this. Be aware that the values in the table are neither
            URL nor HTML escaped and may have to be escaped if you are
            inserting them in code such as an HTML form.
            
            The user to be trusted on the local site is passed in as
            string 'user'.
            
            Optionally, 'retcode' specifies the resource to which
            successful sign-in is redirected, such as Windows Live Mail,
            and is typically a string in the format 'id=2000'. If you
            pass in the value from GetAppRetCode instead, sign-in will
            be redirected to the application. Otherwise, an HTTP 200
            response is returned.
            </summary>
        </member>
        <member name="M:Microsoft.Xrm.Portal.Web.Security.LiveId.WindowsLiveLogin.GetTrustedToken(System.String)">
             <summary>
             Returns the trusted sign-in token in the format needed by the
             trusted sign-in gadget.
            
             User to be trusted on the local site is passed in as string
             'user'.
             </summary>
        </member>
        <member name="M:Microsoft.Xrm.Portal.Web.Security.LiveId.WindowsLiveLogin.GetTrustedLoginUrl">
            <summary>
            Returns the trusted sign-in URL to use for the Windows Live
            Login server. 
            </summary>
        </member>
        <member name="M:Microsoft.Xrm.Portal.Web.Security.LiveId.WindowsLiveLogin.GetTrustedLogoutUrl">
            <summary>
            Returns the trusted sign-out URL to use for the Windows Live
            Login server. 
            </summary>
        </member>
        <member name="M:Microsoft.Xrm.Portal.Web.Security.LiveId.WindowsLiveLogin.parseSettings(System.String)">
            <summary>
            Function to parse the settings file.
            </summary>
            <param name="settingsFile"></param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.Xrm.Portal.Web.Security.LiveId.WindowsLiveLogin.derive(System.String,System.String)">
            <summary>
            Derives the key, given the secret key and prefix as described in the 
            Web Authentication SDK documentation.
            </summary>
        </member>
        <member name="M:Microsoft.Xrm.Portal.Web.Security.LiveId.WindowsLiveLogin.parse(System.String)">
            <summary>
            Parses query string and return a table representation of 
            the key and value pairs.  Similar to 
            HttpUtility.ParseQueryString, except that no URL decoding
            is done and only the last value is considered in the case
            of multiple values with one key.
            </summary>
        </member>
        <member name="M:Microsoft.Xrm.Portal.Web.Security.LiveId.WindowsLiveLogin.getTimestamp">
            <summary>
            Generates a timestamp suitable for the application
            verifier token.
            </summary>
        </member>
        <member name="M:Microsoft.Xrm.Portal.Web.Security.LiveId.WindowsLiveLogin.e64(System.Byte[])">
            <summary>
            Base64-encodes and URL-escapes a byte array.
            </summary>
        </member>
        <member name="M:Microsoft.Xrm.Portal.Web.Security.LiveId.WindowsLiveLogin.u64(System.String)">
            <summary>
            URL-unescapes and Base64-decodes a string.
            </summary>
        </member>
        <member name="M:Microsoft.Xrm.Portal.Web.Security.LiveId.WindowsLiveLogin.fetch(System.String)">
            <summary>
            Fetches the contents given a URL.
            </summary>
        </member>
        <member name="P:Microsoft.Xrm.Portal.Web.Security.LiveId.WindowsLiveLogin.AppId">
            <summary>
            Gets or sets the application ID.
            </summary>
        </member>
        <member name="P:Microsoft.Xrm.Portal.Web.Security.LiveId.WindowsLiveLogin.Secret">
            <summary>
            Sets your secret key. Use this method if you did not specify 
            a secret key at initialization.
            </summary>
        </member>
        <member name="P:Microsoft.Xrm.Portal.Web.Security.LiveId.WindowsLiveLogin.OldSecret">
            <summary>
            Sets your old secret key.
            
            Use this property to set your old secret key if you are in the
            process of transitioning to a new secret key. You may need this 
            property because the Windows Live ID servers can take up to 
            24 hours to propagate a new secret key after you have updated 
            your application settings.
            
            If an old secret key is specified here and has not expired
            (as determined by the OldSecretExpiry setting), it will be used
            as a fallback if token decryption fails with the new secret 
            key.
            </summary>
        </member>
        <member name="P:Microsoft.Xrm.Portal.Web.Security.LiveId.WindowsLiveLogin.OldSecretExpiry">
             <summary>
             Sets or gets the expiry time for your old secret key.
             
             After this time has passed, the old secret key will no longer be
             used even if token decryption fails with the new secret key.
            
             The old secret expiry time is represented as the number of seconds
             elapsed since January 1, 1970. 
             </summary>
        </member>
        <member name="P:Microsoft.Xrm.Portal.Web.Security.LiveId.WindowsLiveLogin.SecurityAlgorithm">
            <summary>
            Sets or gets the version of the security algorithm being used.
            </summary>
        </member>
        <member name="P:Microsoft.Xrm.Portal.Web.Security.LiveId.WindowsLiveLogin.ForceDelAuthNonProvisioned">
            <summary>
            Sets or gets a flag that indicates whether Delegated Authentication
            is non-provisioned (i.e. does not use an application ID or secret
            key).
            </summary>
        </member>
        <member name="P:Microsoft.Xrm.Portal.Web.Security.LiveId.WindowsLiveLogin.PolicyUrl">
            <summary>
            Sets or gets the privacy policy URL.
            
            Set the property for Delegated Authentication, if you did 
            not provide one at initialization time.
            </summary>
        </member>
        <member name="P:Microsoft.Xrm.Portal.Web.Security.LiveId.WindowsLiveLogin.ReturnUrl">
            <summary>
            Sets or gets the return URL--the URL on your site to which the consent 
            service redirects users (along with the action, consent token, 
            and application context) after they have successfully provided 
            consent information for Delegated Authentication. 
            
            This value will override the return URL specified during 
            registration.
            </summary>
        </member>
        <member name="P:Microsoft.Xrm.Portal.Web.Security.LiveId.WindowsLiveLogin.BaseUrl">
            <summary>
            Sets or gets the URL to use for the Windows Live Login server. 
            You should not have to use or change this. Furthermore, we
            recommend that you use the Sign In control instead of
            the URL methods provided here.
            </summary>
        </member>
        <member name="P:Microsoft.Xrm.Portal.Web.Security.LiveId.WindowsLiveLogin.SecureUrl">
            <summary>
            Sets or gets the secure (HTTPS) URL to use for the Windows Live
            Login server.  You should not have to use or change this
            directly.  
            </summary>
        </member>
        <member name="P:Microsoft.Xrm.Portal.Web.Security.LiveId.WindowsLiveLogin.ConsentUrl">
            <summary>
            Sets or gets the URL to use for the Windows Live Consent server. You
            should not have to use or change this directly.
            </summary>
        </member>
        <member name="P:Microsoft.Xrm.Portal.Web.Security.LiveId.WindowsLiveLogin.SignedOutUrl">
            <summary>
            Sets or gets the URL to redirect to after the user has signed out. You
            should not have to use or change this directly.
            </summary>
        </member>
        <member name="P:Microsoft.Xrm.Portal.Web.Security.LiveId.WindowsLiveLogin.AutoRegister">
            <summary>
            Gets or sets whether or not users can be created automatically when they login.
            </summary>
        </member>
        <member name="T:Microsoft.Xrm.Portal.Web.Security.LiveId.WindowsLiveLogin.User">
            <summary>
            Holds the user information after a successful sign-in.
            </summary>
        </member>
        <member name="M:Microsoft.Xrm.Portal.Web.Security.LiveId.WindowsLiveLogin.User.setTimestamp(System.String)">
            <summary>
            Sets the Unix timestamp.
            </summary>
            <param name="timestamp"></param>
        </member>
        <member name="M:Microsoft.Xrm.Portal.Web.Security.LiveId.WindowsLiveLogin.User.setId(System.String)">
            <summary>
            Sets the pairwise unique ID for the user.
            </summary>
            <param name="id">User id</param>
        </member>
        <member name="M:Microsoft.Xrm.Portal.Web.Security.LiveId.WindowsLiveLogin.User.setFlags(System.String)">
            <summary>
            Sets the usePersistentCookie flag for the user.
            </summary>
            <param name="flags"></param>
        </member>
        <member name="M:Microsoft.Xrm.Portal.Web.Security.LiveId.WindowsLiveLogin.User.setContext(System.String)">
            <summary>
            Sets the the Application context.
            </summary>
            <param name="context"></param>
        </member>
        <member name="M:Microsoft.Xrm.Portal.Web.Security.LiveId.WindowsLiveLogin.User.setToken(System.String)">
            <summary>
            Sets the the User token.
            </summary>
            <param name="token"></param>
        </member>
        <member name="P:Microsoft.Xrm.Portal.Web.Security.LiveId.WindowsLiveLogin.User.Timestamp">
            <summary>
             Returns the timestamp as obtained from the SSO token.
            </summary>
        </member>
        <member name="P:Microsoft.Xrm.Portal.Web.Security.LiveId.WindowsLiveLogin.User.Id">
            <summary>
            Returns the pairwise unique ID for the user.
            </summary>
        </member>
        <member name="P:Microsoft.Xrm.Portal.Web.Security.LiveId.WindowsLiveLogin.User.UsePersistentCookie">
            <summary>
            Indicates whether the application
            is expected to store the user token in a session or
            persistent cookie.
            </summary>
        </member>
        <member name="P:Microsoft.Xrm.Portal.Web.Security.LiveId.WindowsLiveLogin.User.Context">
            <summary>
            Returns the application context that was originally passed
            to the sign-in request, if any.
            </summary>
        </member>
        <member name="P:Microsoft.Xrm.Portal.Web.Security.LiveId.WindowsLiveLogin.User.Token">
            <summary>
            Returns the encrypted Web Authentication token containing 
            the UID. This can be cached in a cookie and the UID can be
            retrieved by calling the ProcessToken method.
            </summary>
        </member>
        <member name="T:Microsoft.Xrm.Portal.Web.Security.LiveId.WindowsLiveLogin.ConsentToken">
            <summary>
            Holds the Consent Token object corresponding to consent granted. 
            </summary>
        </member>
        <member name="M:Microsoft.Xrm.Portal.Web.Security.LiveId.WindowsLiveLogin.ConsentToken.#ctor(Microsoft.Xrm.Portal.Web.Security.LiveId.WindowsLiveLogin,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String)">
            <summary>
            Initialize the ConsentToken.
            </summary>
            <param name="wll">WindowsLiveLogin</param>
            <param name="delegationToken">Delegation token</param>
            <param name="refreshToken">Refresh token</param>
            <param name="sessionKey">Session key</param>
            <param name="expiry">Expiry</param>
            <param name="offers">Offers</param>
            <param name="locationID">Location ID</param>
            <param name="context">Application context</param>
            <param name="decodedToken">Decoded token</param>
            <param name="token">Raw token</param>
        </member>
        <member name="M:Microsoft.Xrm.Portal.Web.Security.LiveId.WindowsLiveLogin.ConsentToken.setDelegationToken(System.String)">
            <summary>
            Sets the Delegation token.
            </summary>
            <param name="delegationToken">Delegation token</param>
        </member>
        <member name="M:Microsoft.Xrm.Portal.Web.Security.LiveId.WindowsLiveLogin.ConsentToken.setRefreshToken(System.String)">
            <summary>
            Sets the refresh token.
            </summary>
            <param name="refreshToken">Refresh token</param>
        </member>
        <member name="M:Microsoft.Xrm.Portal.Web.Security.LiveId.WindowsLiveLogin.ConsentToken.setSessionKey(System.String)">
            <summary>
            Sets the session key.
            </summary>
            <param name="sessionKey">Session key</param>
        </member>
        <member name="M:Microsoft.Xrm.Portal.Web.Security.LiveId.WindowsLiveLogin.ConsentToken.setExpiry(System.String)">
            <summary>
            Sets the expiry time of delegation token.
            </summary>
            <param name="expiry">Expiry time</param>
        </member>
        <member name="M:Microsoft.Xrm.Portal.Web.Security.LiveId.WindowsLiveLogin.ConsentToken.setOffers(System.String)">
            <summary>
            Sets the offers/actions for which user granted consent.
            </summary>
            <param name="offers">Comma-delimited list of offers</param>
        </member>
        <member name="M:Microsoft.Xrm.Portal.Web.Security.LiveId.WindowsLiveLogin.ConsentToken.setLocationID(System.String)">
            <summary>
            Sets the location ID.
            </summary>
            <param name="locationID">Location ID</param>
        </member>
        <member name="M:Microsoft.Xrm.Portal.Web.Security.LiveId.WindowsLiveLogin.ConsentToken.setContext(System.String)">
            <summary>
            Sets the application context.
            </summary>
            <param name="context">Application context</param>
        </member>
        <member name="M:Microsoft.Xrm.Portal.Web.Security.LiveId.WindowsLiveLogin.ConsentToken.setDecodedToken(System.String)">
            <summary>
            Sets the decoded token.
            </summary>
            <param name="decodedToken">Decoded token</param>
        </member>
        <member name="M:Microsoft.Xrm.Portal.Web.Security.LiveId.WindowsLiveLogin.ConsentToken.setToken(System.String)">
            <summary>
            Sets the raw token.
            </summary>
            <param name="token">Raw token</param>
        </member>
        <member name="M:Microsoft.Xrm.Portal.Web.Security.LiveId.WindowsLiveLogin.ConsentToken.IsValid">
            <summary>
            Indicates whether the delegation token is set and has not expired.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Microsoft.Xrm.Portal.Web.Security.LiveId.WindowsLiveLogin.ConsentToken.Refresh">
            <summary>
            Attempt to refresh the current token and replace it. If operation succeeds 
            true is returned to signify success.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Microsoft.Xrm.Portal.Web.Security.LiveId.WindowsLiveLogin.ConsentToken.copy(Microsoft.Xrm.Portal.Web.Security.LiveId.WindowsLiveLogin.ConsentToken)">
            <summary>
            Makes a copy of the ConsentToken object.
            </summary>
            <param name="consentToken"></param>
        </member>
        <member name="P:Microsoft.Xrm.Portal.Web.Security.LiveId.WindowsLiveLogin.ConsentToken.DelegationToken">
            <summary>
            Gets the Delegation token.
            </summary>
        </member>
        <member name="P:Microsoft.Xrm.Portal.Web.Security.LiveId.WindowsLiveLogin.ConsentToken.RefreshToken">
            <summary>
            Gets the refresh token.
            </summary>
        </member>
        <member name="P:Microsoft.Xrm.Portal.Web.Security.LiveId.WindowsLiveLogin.ConsentToken.SessionKey">
            <summary>
            Gets the session key.
            </summary>
        </member>
        <member name="P:Microsoft.Xrm.Portal.Web.Security.LiveId.WindowsLiveLogin.ConsentToken.Expiry">
            <summary>
            Gets the expiry time of delegation token.
            </summary>
        </member>
        <member name="P:Microsoft.Xrm.Portal.Web.Security.LiveId.WindowsLiveLogin.ConsentToken.Offers">
            <summary>
            Gets the list of offers/actions for which the user granted consent.
            </summary>
        </member>
        <member name="P:Microsoft.Xrm.Portal.Web.Security.LiveId.WindowsLiveLogin.ConsentToken.OffersString">
            <summary>
            Gets the string representation of all the offers/actions for which 
            the user granted consent.
            </summary>
        </member>
        <member name="P:Microsoft.Xrm.Portal.Web.Security.LiveId.WindowsLiveLogin.ConsentToken.LocationID">
            <summary>
            Gets the location ID.
            </summary>
        </member>
        <member name="P:Microsoft.Xrm.Portal.Web.Security.LiveId.WindowsLiveLogin.ConsentToken.Context">
            <summary>
            Returns the application context that was originally passed 
            to the consent request, if any.
            </summary>
        </member>
        <member name="P:Microsoft.Xrm.Portal.Web.Security.LiveId.WindowsLiveLogin.ConsentToken.DecodedToken">
            <summary>
            Gets the decoded token.
            </summary>
        </member>
        <member name="P:Microsoft.Xrm.Portal.Web.Security.LiveId.WindowsLiveLogin.ConsentToken.Token">
            <summary>
            Gets the raw token.
            </summary>
        </member>
        <member name="T:Microsoft.Xrm.Portal.Configuration.DependencyProvider">
            <summary>
            A set of portal dependency classes.
            </summary>
        </member>
        <member name="M:Microsoft.Xrm.Portal.Configuration.DependencyProvider.GetDependency``1">
            <summary>
            Retrieves a dependency by type.
            </summary>
            <typeparam name="T"></typeparam>
            <returns></returns>
        </member>
        <member name="M:Microsoft.Xrm.Portal.Configuration.DependencyProvider.GetDependency``1(System.String)">
            <summary>
            Retrieves a dependency by type and name.
            </summary>
            <typeparam name="T"></typeparam>
            <param name="name"></param>
            <returns></returns>
        </member>
        <member name="P:Microsoft.Xrm.Portal.Configuration.DependencyProvider.PortalName">
            <summary>
            The portal name used by dependencies that require a portal.
            </summary>
        </member>
        <member name="T:Microsoft.Xrm.Portal.Configuration.PortalContextElementCollection">
            <summary>
            A collection of <see cref="T:Microsoft.Xrm.Portal.Configuration.PortalContextElement"/> objects.
            </summary>
        </member>
        <member name="F:Microsoft.Xrm.Portal.Configuration.PortalContextElementCollection.Name">
            <summary>
            The name of the element collection.
            </summary>
        </member>
        <member name="P:Microsoft.Xrm.Portal.Configuration.PortalContextElementCollection.CollectionName">
            <summary>
            The name of the element collection.
            </summary>
        </member>
        <member name="T:Microsoft.Xrm.Portal.Web.UI.WebControls.WebLinks">
            <summary>
            Renders a web link set (adx_weblinkset) as a list of links.
            </summary>
        </member>
        <member name="P:Microsoft.Xrm.Portal.Web.UI.WebControls.WebLinks.CurrentSiteMapNodeCssClass">
            <summary>
            Gets or sets a CSS class value to be added to the hyperlink if the target node of
            the hyperlink is the current site map node.
            </summary>
        </member>
        <member name="P:Microsoft.Xrm.Portal.Web.UI.WebControls.WebLinks.ParentOfCurrentSiteMapNodeCssClass">
            <summary>
            Gets or sets a CSS class value to be added to the hyperlink if the current site map
            node is a descendant of the target node of the hyperlink.
            </summary>
        </member>
        <member name="T:Microsoft.Xrm.Portal.Web.UI.WebControls.CrmMetadataDataSourceView">
            <summary>
            Supports the <see cref="T:Microsoft.Xrm.Portal.Web.UI.WebControls.CrmMetadataDataSource"/> control and provides an interface for data-bound controls to retrieve data from the <see cref="!:CrmService"/>.
            </summary>
        </member>
        <member name="T:Microsoft.Xrm.Portal.Web.UI.WebControls.CacheKeyDependency">
            <summary>
            Represents settings for a cache key based cache dependency.
            </summary>
        </member>
        <member name="T:Microsoft.Xrm.Portal.Web.UI.WebControls.CacheKey">
            <summary>
            Represents settings for describing a cache key.
            </summary>
        </member>
        <member name="M:Microsoft.Xrm.Portal.Web.UI.WebControls.CacheKey.GetCacheKey(System.Web.HttpContext,System.Web.UI.Control,System.Object)">
            <summary>
            Retrieves the cache key based on the current property values.
            </summary>
            <param name="context"></param>
            <param name="control"></param>
            <param name="container"></param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.Xrm.Portal.Web.UI.WebControls.CacheKey.GetCacheKey(System.Web.HttpContext,System.Web.UI.Control,System.Object,System.Converter{System.String,System.String})">
            <summary>
            Retrieves the cache key based on the current property values.
            </summary>
            <param name="context"></param>
            <param name="control"></param>
            <param name="container"></param>
            <param name="getDefaultKey"></param>
            <returns></returns>
        </member>
        <member name="P:Microsoft.Xrm.Portal.Web.UI.WebControls.CacheKey.Name">
            <summary>
            Gets or sets the name used for applying a property as a parameter.
            </summary>
        </member>
        <member name="P:Microsoft.Xrm.Portal.Web.UI.WebControls.CacheKey.PropertyName">
            <summary>
            Gets or sets the name of the property from which to obtain the value.
            </summary>
        </member>
        <member name="P:Microsoft.Xrm.Portal.Web.UI.WebControls.CacheKey.KeyFormat">
            <summary>
            Gets or sets the format string describing the cache key.
            </summary>
        </member>
        <member name="P:Microsoft.Xrm.Portal.Web.UI.WebControls.CacheKey.VaryByUser">
            <summary>
            Gets or sets the flag for caching by user.
            </summary>
        </member>
        <member name="P:Microsoft.Xrm.Portal.Web.UI.WebControls.CacheKey.VaryByParam">
            <summary>
            Gets or sets the set of querystring parameter names. The names are separated by a semi-colon character.
            </summary>
        </member>
        <member name="P:Microsoft.Xrm.Portal.Web.UI.WebControls.CacheKey.Parameters">
            <summary>
            Gets the parameters collection that contains the parameters that are used by the KeyFormat property.
            </summary>
        </member>
        <member name="T:Microsoft.Xrm.Portal.Web.CrmSiteMapNode">
            <summary>
            Represents a SiteMap node for the site map providers.
            </summary>
        </member>
        <member name="M:Microsoft.Xrm.Portal.Web.CrmSiteMapNode.#ctor(System.Web.SiteMapProvider,System.String,System.String,System.String,System.String,System.String,System.DateTime)">
            <summary>
            Constructs a new site map node.
            </summary>
            <param name="provider">Provider used to construct this site map node.</param>
            <param name="key">Unique key.</param>
            <param name="url">Url to render.</param>
            <param name="title">Title of page.</param>
            <param name="description">Description of page.</param>
            <param name="rewriteUrl">Url to use for url rewriting.</param>
            <param name="lastModified">Last modification date.</param>
        </member>
        <member name="P:Microsoft.Xrm.Portal.Web.CrmSiteMapNode.RewriteUrl">
            <summary>
            The real url to use for url rewriting for site map node.
            </summary>
        </member>
        <member name="P:Microsoft.Xrm.Portal.Web.CrmSiteMapNode.LastModified">
            <summary>
            The last modification date of the data for site map node.
            </summary>
        </member>
        <member name="M:Microsoft.Xrm.Portal.Core.NoteExtensions.GetRewriteUrl(Microsoft.Xrm.Sdk.Entity)">
            <summary>
            Retrieve the url to emit that will download this attached file from the website.
            </summary>
        </member>
        <member name="T:Microsoft.Xrm.Portal.Configuration.WebsiteSelectorElement">
            <summary>
            The configuration settings for <see cref="T:Microsoft.Xrm.Portal.Cms.WebsiteSelectors.IWebsiteSelector"/> dependencies.
            </summary>
            <remarks>
            For an example of the configuration format refer to the <see cref="T:Microsoft.Xrm.Portal.Configuration.PortalCrmConfigurationManager"/>.
            </remarks>
        </member>
        <member name="M:Microsoft.Xrm.Portal.Configuration.WebsiteSelectorElement.CreateWebsiteSelector(System.String)">
            <summary>
            Creates a <see cref="T:Microsoft.Xrm.Portal.Cms.WebsiteSelectors.IWebsiteSelector"/> object.
            </summary>
            <param name="portalName"></param>
            <returns></returns>
        </member>
        <member name="P:Microsoft.Xrm.Portal.Configuration.WebsiteSelectorElement.Name">
            <summary>
            Gets or sets the element name.
            </summary>
        </member>
        <member name="P:Microsoft.Xrm.Portal.Configuration.WebsiteSelectorElement.Type">
            <summary>
            The dependency type name.
            </summary>
        </member>
        <member name="T:Microsoft.Xrm.Portal.Caching.CacheServiceBusServiceHost">
            <summary>
            A WCF service host that listens on an AppFabric Service Bus endpoint and hosting a <see cref="T:Microsoft.Xrm.Portal.Caching.IServiceBusCacheService"/> service.
            </summary>
            <remarks>
            The service provides distributed cache invalidation requests between listening applications.
            </remarks>
            <seealso cref="T:Microsoft.Xrm.Portal.Caching.ServiceBusObjectCache"/>
        </member>
        <member name="T:Microsoft.Xrm.Portal.Web.UI.WebControls.CrmListViewListMode">
            <summary>
            The set of options for auto-generated container elements.
            </summary>
        </member>
        <member name="T:Microsoft.Xrm.Portal.Web.UI.WebControls.CrmListView">
            <summary>
            The base <see cref="T:System.Web.UI.WebControls.ListView"></see> control for rendering XRM entity content.
            </summary>
        </member>
        <member name="P:Microsoft.Xrm.Portal.Web.UI.WebControls.CrmListView.ListMode">
            <summary>
            Gets or sets the mode for controlling auto-generated container elements.
            </summary>
        </member>
        <member name="P:Microsoft.Xrm.Portal.Web.UI.WebControls.CrmListView.ListCssClass">
            <summary>
            Gets or sets the CSS class to be applied to the container list element if auto-generated containers is enabled.
            </summary>
        </member>
        <member name="P:Microsoft.Xrm.Portal.Web.UI.WebControls.CrmListView.ItemCssClass">
            <summary>
            Gets or sets the CSS class to be applied to the list item elements if auto-generated containers is enabled.
            </summary>
        </member>
        <member name="P:Microsoft.Xrm.Portal.Web.UI.WebControls.CrmListView.ListTagName">
            <summary>
            Gets or sets the element name used to render the container element. Overrides the name selected by the ListMode setting.
            </summary>
        </member>
        <member name="P:Microsoft.Xrm.Portal.Web.UI.WebControls.CrmListView.ItemTagName">
            <summary>
            Gets or sets the element name used to render the item elements. Overrides the name selected by the ListMode setting.
            </summary>
        </member>
        <member name="T:Microsoft.Xrm.Portal.Web.Modules.EmbeddedResourceVirtualPathProviderModule">
            <summary>
            Enables the <see cref="T:Microsoft.Xrm.Portal.Web.EmbeddedResourceVirtualPathProvider"/>.
            </summary>
            <remarks>
            The functionality of the <see cref="T:Microsoft.Xrm.Portal.Web.EmbeddedResourceVirtualPathProvider"/> is replaced by the <see cref="T:Microsoft.Xrm.Portal.Web.Modules.PortalRoutingModule"/> but can still be used
            if URL routing is not being used.
            </remarks>
        </member>
        <member name="T:Microsoft.Xrm.Portal.Web.EmbeddedResourceAssemblyAttribute">
            <summary>
            Represents an assembly attribute that registers another assembly of statically served embedded resource files.
            </summary>
        </member>
        <member name="P:Microsoft.Xrm.Portal.Web.EmbeddedResourceAssemblyAttribute.Assembly">
            <summary>
            Gets the name of the assembly containing the embedded resources.
            </summary>
        </member>
        <member name="P:Microsoft.Xrm.Portal.Web.EmbeddedResourceAssemblyAttribute.Namespace">
            <summary>
            Gets the default namespace.
            </summary>
        </member>
        <member name="P:Microsoft.Xrm.Portal.Web.EmbeddedResourceAssemblyAttribute.VirtualPathMask">
            <summary>
            Gets the virtual directory path pattern to match against.
            </summary>
        </member>
        <member name="P:Microsoft.Xrm.Portal.Web.EmbeddedResourceAssemblyAttribute.AllowOverride">
            <summary>
            Gets the flag allowing the previous virtual path provider to take precedence.
            </summary>
        </member>
        <member name="P:Microsoft.Xrm.Portal.Web.EmbeddedResourceAssemblyAttribute.AllowDefaultDocument">
            <summary>
            Gets the flag allowing a default document transfer to occur.
            </summary>
        </member>
        <member name="P:Microsoft.Xrm.Portal.Web.EmbeddedResourceAssemblyAttribute.Resources">
            <summary>
            Gets the set of resources contained in the assembly.
            </summary>
        </member>
        <member name="P:Microsoft.Xrm.Portal.Web.EmbeddedResourceAssemblyAttribute.ResourceLookup">
            <summary>
            Gets a lookup from resource name to resource node.
            </summary>
        </member>
        <member name="T:Microsoft.Xrm.Portal.Web.Routing.EmbeddedResourceRouteHandler">
            <summary>
            Handles routes involving access to embedded resources.
            </summary>
            <seealso cref="T:Microsoft.Xrm.Portal.Web.Modules.PortalRoutingModule"/>
            <seealso cref="T:Microsoft.Xrm.Portal.Web.Handlers.EmbeddedResourceHttpHandler"/>
        </member>
        <member name="M:Microsoft.Xrm.Portal.Web.Routing.EmbeddedResourceRouteHandler.GetHttpHandler(System.Web.Routing.RequestContext)">
            <summary>
            Provides the object that processes the request.
            </summary>
            <param name="requestContext">An object that encapsulates information about the request.</param>
            <returns></returns>
        </member>
        <member name="P:Microsoft.Xrm.Portal.Web.Routing.EmbeddedResourceRouteHandler.Mappings">
            <summary>
            Description of the available embedded resource assemblies.
            </summary>
        </member>
        <member name="T:Microsoft.Xrm.Portal.Web.Routing.EntityRouteHandler">
            <summary>
            Handles requests to <see cref="T:Microsoft.Xrm.Sdk.Entity"/> objects.
            </summary>
            <seealso cref="T:Microsoft.Xrm.Portal.Web.Modules.PortalRoutingModule"/>
            <seealso cref="T:Microsoft.Xrm.Portal.Web.Handlers.AnnotationHandler"/>
        </member>
        <member name="M:Microsoft.Xrm.Portal.Web.Routing.EntityRouteHandler.GetHttpHandler(System.Web.Routing.RequestContext)">
            <summary>
            Provides the object that processes the request.
            </summary>
            <param name="requestContext">An object that encapsulates information about the request.</param>
            <returns></returns>
        </member>
        <member name="P:Microsoft.Xrm.Portal.Web.Routing.EntityRouteHandler.PortalName">
            <summary>
            The name of the <see cref="T:Microsoft.Xrm.Portal.Configuration.PortalContextElement"/> specifying the current portal.
            </summary>
        </member>
        <member name="T:Microsoft.Xrm.Portal.Web.UI.WebControls.CrmEntityEditingManager">
            <summary>
            Coordinates rendering of hidden DOM metadata for a bound entity, to support XRM inline editing.
            </summary>
        </member>
        <member name="T:Microsoft.Xrm.Portal.Web.Handlers.CacheInvalidationHandler">
            <summary>
            Used to invalidate cache items based on the type of message (publish, create, update, or delete) and the entity type and id.
            </summary>
            <remarks>
            Only the default or configured <see cref="T:Microsoft.Xrm.Client.Services.OrganizationServiceCache"/>s will be invalidated.
            </remarks>
        </member>
        <member name="P:Microsoft.Xrm.Portal.Web.Handlers.CacheInvalidationHandler.IsReusable">
            <summary>Gets whether this handler is reusable.</summary>
        </member>
    </members>
</doc>
